{"version":3,"file":"static/js/546.98fe0832.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/StatisticsInfo/statisticsInfo.module.css?e2de","components/StatisticsInfo/StatisticsInfo.jsx","webpack://react-homework-template/./src/pages/SignUpPage/SignUpPage.module.css?2000","webpack://react-homework-template/./src/components/SignUpForm/signUpForm.module.css?9023","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"statisticsInfo_wrapper__OQ8L4\",\"videos_wrapper\":\"statisticsInfo_videos_wrapper__qXyu0\",\"calories_wrapper\":\"statisticsInfo_calories_wrapper__MQp8r\",\"play\":\"statisticsInfo_play__TxpMN\",\"human_icon\":\"statisticsInfo_human_icon__PanqY\",\"wrap_text\":\"statisticsInfo_wrap_text__Hn2Tc\",\"num\":\"statisticsInfo_num__vCZe2\",\"num_cal\":\"statisticsInfo_num_cal__Sj6dA\",\"cal\":\"statisticsInfo_cal__UyL4I\",\"wrap_text2\":\"statisticsInfo_wrap_text2__h5CgB\"};","import css from './statisticsInfo.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\naxios.defaults.baseURL = 'https://powerpulse-backend.onrender.com';\n\nconst StatisticInfo = () => {\n  const [calories, setCalories] = useState(null);\n  const [videos, setVideos] = useState(null);\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const res = await axios.get('/statistic');\n        setVideos(res.data.videos);\n        setCalories(res.data.caloriesBurned);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getData();\n  }, []);\n\n  return (\n    <div className={css.wrapper}>\n      <div className={css.videos_wrapper}>\n        <svg className={css.play}>\n          <use href={sprite + '#play_icon'}></use>\n        </svg>\n        <div className={css.wrap_text}>\n          <p className={css.num}>{videos !== null ? videos : '350+'}</p>\n          <p>Video tutorial</p>\n        </div>\n      </div>\n\n      <div className={css.calories_wrapper}>\n        <svg className={css.human_icon}>\n          <use href={sprite + '#running_stick_figure_icon'}></use>\n        </svg>\n        <div className={css.wrap_text2}>\n          <p className={css.num_cal}>{calories !== null ? calories : '500'}</p>\n          <p className={css.cal}>cal</p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default StatisticInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignUpPage_container__A1kU5\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"signUpForm_wrapper__PKhIM\",\"message\":\"signUpForm_message__fzGMT\",\"formContainer\":\"signUpForm_formContainer__DHGEk\",\"link\":\"signUpForm_link__WLLu9\",\"description\":\"signUpForm_description__H+Axh\",\"btn\":\"signUpForm_btn__JOqqb\",\"form\":\"signUpForm_form__lMLfO\",\"title\":\"signUpForm_title__QGgU7\",\"titleDescription\":\"signUpForm_titleDescription__c-H5p\",\"input\":\"signUpForm_input__rpOYh\",\"error\":\"signUpForm_error__-+xAN\",\"success\":\"signUpForm_success__jKilj\",\"messageInput\":\"signUpForm_messageInput__0d2tz\",\"errorText\":\"signUpForm_errorText__JftfT\",\"successText\":\"signUpForm_successText__MatQC\",\"errorSvg\":\"signUpForm_errorSvg__cuOuD\",\"successSvg\":\"signUpForm_successSvg__innen\",\"eyeIcon\":\"signUpForm_eyeIcon__B59fH\",\"eyeIconOff\":\"signUpForm_eyeIconOff__X4TCz\"};","import { NavLink } from \"react-router-dom\";\nimport style from './signUpForm.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from \"react\";\n\nconst SignUpForm = () => {\n    const [showPassword, setShowPassword] = useState(false);\n    const dispatch = useDispatch();\n    \n    const SignupSchema = Yup.object().shape({\n        name: Yup.string()\n          .min(2)\n          .max(50)\n          .required('Required'),\n        email: Yup.string()\n          .min(2)\n          .max(50)\n          .email('Error email')\n          .required('Required'),\n        password: Yup.string()\n          .min(2, 'Short password')\n          .max(50,'Long password')\n          .required('Required'),\n      });\n      \n\n    return(\n        <div className={style.wrapper}>\n            <div className={style.formContainer}>\n                <h1 className={style.title}>Sign Up</h1>\n                <p className={style.titleDescription}>Thank you for your interest in our platform. To complete the registration process, please provide us with the following information.</p>\n                <Formik\n                    initialValues={{\n                        name: '',\n                        email: '',\n                        password: '',\n                      }}\n                      validationSchema={SignupSchema}\n                      onSubmit={values => {\n                        dispatch(register(values));\n                      }}\n                >\n                    {({ errors, touched }) => (\n                        <Form className={style.form}>\n                            <label className={style.label}>\n                                <Field\n                                    type=\"text\"\n                                    name='name'\n                                    placeholder='Name'\n                                    required\n                                    className={`\n                                    ${style.input} ${errors.name && touched.name ? style.error : ''} \n                                    ${touched.name && !errors.name ? style.success : ''}`}\n                                />\n                            </label>\n                            <label className={style.label}>\n                                <Field\n                                    type=\"email\"\n                                    name='email'\n                                    placeholder='Email'\n                                    required\n                                    className={`\n                                    ${style.input} ${errors.email && touched.email ? style.error : ''} \n                                    ${touched.email && !errors.email ? style.success : ''}`}\n                                />\n                                {errors.email && touched.email && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.errorSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <ErrorMessage component='p' className={style.errorText} name='email'/>\n                                    </div>\n                                )}\n                                {!errors.email && touched.email && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.successSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <p className={style.successText}>Success email</p>\n                                    </div>\n                                )}\n                            </label>\n                            <label className={style.label}>\n                                <Field\n                                    type={showPassword ? 'text' : 'password'}\n                                    name='password'\n                                    placeholder='Password'\n                                    minLength={7}\n                                    required\n                                    className={`\n                                    ${style.input} ${errors.password && touched.password ? style.error : ''} \n                                    ${touched.password && !errors.password ? style.success : ''}`}\n                                />\n                                {errors.password && touched.password && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.errorSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <ErrorMessage component='p' className={style.errorText} name='password'/>\n                                    </div>\n                                )}\n                                {!errors.password && touched.password && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.successSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <p className={style.successText}>Success password</p>\n                                    </div>\n                                )}\n                                {!showPassword && <svg\n                                    className={style.eyeIcon}\n                                    onClick={() => setShowPassword(!showPassword)}\n                                >\n                                    <use href={sprite + '#icon-eye'}></use>\n                                </svg>}\n                                {showPassword && <svg\n                                    className={style.eyeIconOff}\n                                    onClick={() => setShowPassword(!showPassword)}\n                                >\n                                    <use href={sprite + '#icon-eye-off'}></use>\n                                </svg>}\n                            </label>\n                            <button type='submit' className={style.btn}>Sign Up</button>\n                        </Form>\n                    )}\n                </Formik>\n                <p className={style.description}>Already have an account?&nbsp;\n                    <NavLink to={'/signin'} className={style.link}>Sign In</NavLink>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUpForm;","import React from 'react';\nimport style from './SignUpPage.module.css';\nimport SignUpForm from 'components/SignUpForm/SignUpForm';\nimport StatisticInfo from 'components/StatisticsInfo/StatisticsInfo';\nimport { useSelector } from 'react-redux';\nimport { Rings } from 'react-loader-spinner';\n\nconst SignUpPage = () => {\n  const isLoading = useSelector(state => state.auth.isLoading);\n  return (\n    <>\n      {isLoading ? (<Rings\n      height=\"100\"\n      width=\"100\"\n      color=\"#e6533c\"\n      ariaLabel=\"rings-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100vh',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      firstLineColor=\"\"\n      middleLineColor=\"\"\n      lastLineColor=\"\"\n    />):(<div className={style.container}>\n      <SignUpForm/>\n      <StatisticInfo/>\n    </div>)}\n    </>\n  )\n}\nexport default SignUpPage\n"],"names":["axios","StatisticInfo","calories","setCalories","useState","videos","setVideos","useEffect","async","res","data","caloriesBurned","error","console","getData","_jsxs","className","css","children","_jsx","href","sprite","SignUpForm","showPassword","setShowPassword","dispatch","useDispatch","SignupSchema","Yup","shape","name","min","max","required","email","password","style","Formik","initialValues","validationSchema","onSubmit","values","register","_ref","errors","touched","Form","Field","type","placeholder","concat","ErrorMessage","component","minLength","onClick","NavLink","to","SignUpPage","isLoading","useSelector","state","auth","_Fragment","Rings","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor"],"sourceRoot":""}