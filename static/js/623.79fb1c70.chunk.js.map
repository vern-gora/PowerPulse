{"version":3,"file":"static/js/623.79fb1c70.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/StatisticsInfo/statisticsInfo.module.css?e2de","components/StatisticsInfo/StatisticsInfo.jsx","webpack://react-homework-template/./src/pages/SignInPage/SignInPage.module.css?c872","webpack://react-homework-template/./src/components/SignInForm/SignInForm.module.css?03fb","components/SignInForm/SignInForm.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"statisticsInfo_wrapper__OQ8L4\",\"videos_wrapper\":\"statisticsInfo_videos_wrapper__qXyu0\",\"calories_wrapper\":\"statisticsInfo_calories_wrapper__MQp8r\",\"play\":\"statisticsInfo_play__TxpMN\",\"human_icon\":\"statisticsInfo_human_icon__PanqY\",\"wrap_text\":\"statisticsInfo_wrap_text__Hn2Tc\",\"num\":\"statisticsInfo_num__vCZe2\",\"num_cal\":\"statisticsInfo_num_cal__Sj6dA\",\"cal\":\"statisticsInfo_cal__UyL4I\",\"wrap_text2\":\"statisticsInfo_wrap_text2__h5CgB\"};","import css from './statisticsInfo.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\naxios.defaults.baseURL = \"https://powerpulse-backend.onrender.com\";\n\nconst StatisticInfo = () => {\n    const [calories, setCalories] = useState(null);\n    const [videos, setVideos] = useState(null);\n\n    useEffect(()=> {\n        async function getVideo() {\n            try {\n              const vid = await axios.get('/statistic/video');\n              setVideos(vid.data.videos);\n            } catch (error) {\n              console.error(error);\n            }\n        };\n        async function getCalories() {\n            try {\n              const res = await axios.get('/statistic/calories');\n              setCalories(res.data.calories);\n            } catch (error) {\n              console.error(error);\n            }\n        };\n\n        getVideo();\n        getCalories()\n    }, []);\n    \n    return (\n        <div className={css.wrapper}>  \n            <div className={css.videos_wrapper}>\n                <svg className={css.play}>\n                    <use href={sprite + '#play_icon'}></use>\n                </svg>\n                <div className={css.wrap_text}>\n                    <p className={css.num}>{videos !== null ? videos : '350+'}</p>\n                    <p>Video tutorial</p>\n                </div>\n            </div>\n            \n            <div className={css.calories_wrapper}>\n                <svg className={css.human_icon}>\n                    <use href={sprite + '#running_stick_figure_icon'}></use>\n                </svg>\n                <div className={css.wrap_text2}>\n                    <p className={css.num_cal}>{calories !== null ? calories : '500'}</p>\n                    <p className={css.cal}>cal</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default StatisticInfo;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignInPage_container__ggoLX\"};","// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"SignInForm_loginContainer__QyM0t\",\"formContainer\":\"SignInForm_formContainer__XIarE\",\"link\":\"SignInForm_link__nf+u8\",\"description\":\"SignInForm_description__46Gxg\",\"btn\":\"SignInForm_btn__ZrkTW\",\"form\":\"SignInForm_form__5J56V\",\"title\":\"SignInForm_title__eps-m\",\"titleDescription\":\"SignInForm_titleDescription__jkvG+\",\"input\":\"SignInForm_input__SoPYj\",\"error\":\"SignInForm_error__6QASg\",\"success\":\"SignInForm_success__jVWMF\",\"messageInput\":\"SignInForm_messageInput__+BMWd\",\"errorText\":\"SignInForm_errorText__tBDUL\",\"successText\":\"SignInForm_successText__JfWlN\",\"errorSvg\":\"SignInForm_errorSvg__dzkTe\",\"successSvg\":\"SignInForm_successSvg__DSRRf\"};","import { NavLink } from \"react-router-dom\";\nimport style from './SignInForm.module.css'\nimport sprite from '../../images/svg/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/operations\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst SignInForm = () => {\n    const dispatch = useDispatch();\n\n    const SignInSchema = Yup.object().shape({\n        email: Yup.string()\n          .min(2, 'Too Short Email!')\n          .max(50, 'Too Long Email!')\n          .email('Error email')\n          .required('Required'),\n        password: Yup.string()\n          .required('Required')\n          .min(2)\n          .max(50),\n      });\n\n    return (\n        <div className={style.loginContainer}>\n            <div className={style.formContainer}>\n                <h1 className={style.title}>Sign In</h1>\n                <p className={style.titleDescription}>Welcome! Please enter your credentials to login to the platform:</p>\n                <Formik \n                    initialValues={{\n                        email: '',\n                        password: '',\n                      }}\n                      validationSchema={SignInSchema}\n                      onSubmit={values => {\n                        dispatch(logIn(values));\n                      }}\n                >\n                    {({ errors, touched }) => (\n                        <Form className={style.form}>\n                            <label>\n                                <Field \n                                type=\"email\" \n                                required \n                                placeholder=\"Email\" \n                                name=\"email\" \n                                className={`\n                                    ${style.input} ${errors.email && touched.email ? style.error : ''} \n                                    ${touched.email && !errors.email ? style.success : ''}`}\n                                />\n                                {errors.email && touched.email && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.errorSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <ErrorMessage component='p' className={style.errorText} name='email'/>\n                                    </div>\n                                )}\n                                {!errors.email && touched.email && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.successSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <p className={style.successText}>Success email</p>\n                                    </div>\n                                )}\n                            </label>\n                            <label>\n                                <Field \n                                type=\"password\" \n                                required \n                                placeholder=\"Password\" \n                                name=\"password\" \n                                minLength={7} \n                                className={`\n                                    ${style.input} ${errors.password && touched.password ? style.error : ''} \n                                    ${touched.password && !errors.password ? style.success : ''}`} \n                                />\n                                {errors.password && touched.password && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.errorSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <ErrorMessage component='p' className={style.errorText} name='password'/>\n                                    </div>\n                                )}\n                                {!errors.password && touched.password && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.successSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <p className={style.successText}>Success password</p>\n                                    </div>\n                                )}\n                            </label>\n                            <button type=\"submit\" className={style.btn}>Sign In</button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n            <p className={style.description}>Don’t have an account?&nbsp;\n                <NavLink to={'/signup'} className={style.link}>Sign Up</NavLink>\n            </p>\n        </div>\n    )\n}\n\nexport default SignInForm;","import React from 'react';\nimport style from './SignInPage.module.css';\nimport StatisticInfo from 'components/StatisticsInfo/StatisticsInfo';\nimport SignInForm from 'components/SignInForm/SignInForm';\n\nconst SignInPage = () => {\n  return (\n    <div className={style.container}>\n      <SignInForm/>\n      <StatisticInfo/>\n    </div>\n  )\n}\n\nexport default SignInPage\n"],"names":["axios","_useState","useState","_useState2","_slicedToArray","calories","setCalories","_useState3","_useState4","videos","setVideos","useEffect","_getVideo","_asyncToGenerator","_regeneratorRuntime","_callee","vid","_context","prev","next","sent","data","t0","console","error","stop","apply","arguments","_getCalories","_callee2","res","_context2","getVideo","getCalories","_jsxs","className","css","children","_jsx","href","sprite","dispatch","useDispatch","SignInSchema","Yup","shape","email","min","max","required","password","style","Formik","initialValues","validationSchema","onSubmit","values","logIn","_ref","errors","touched","Form","Field","type","placeholder","name","concat","ErrorMessage","component","minLength","NavLink","to","SignInForm","StatisticInfo"],"sourceRoot":""}