{"version":3,"file":"static/js/623.ac6ca510.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/StatisticsInfo/statisticsInfo.module.css?e2de","components/StatisticsInfo/StatisticsInfo.jsx","webpack://react-homework-template/./src/pages/SignInPage/SignInPage.module.css?c872","webpack://react-homework-template/./src/components/SignInForm/SignInForm.module.css?03fb","components/SignInForm/SignInForm.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"statisticsInfo_wrapper__OQ8L4\",\"videos_wrapper\":\"statisticsInfo_videos_wrapper__qXyu0\",\"calories_wrapper\":\"statisticsInfo_calories_wrapper__MQp8r\",\"play\":\"statisticsInfo_play__TxpMN\",\"human_icon\":\"statisticsInfo_human_icon__PanqY\",\"wrap_text\":\"statisticsInfo_wrap_text__Hn2Tc\",\"num\":\"statisticsInfo_num__vCZe2\",\"num_cal\":\"statisticsInfo_num_cal__Sj6dA\",\"cal\":\"statisticsInfo_cal__UyL4I\",\"wrap_text2\":\"statisticsInfo_wrap_text2__h5CgB\"};","import css from './statisticsInfo.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\naxios.defaults.baseURL = 'https://powerpulse-backend.onrender.com';\n\nconst StatisticInfo = () => {\n  const [calories, setCalories] = useState(null);\n  const [videos, setVideos] = useState(null);\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const res = await axios.get('/statistic');\n        setVideos(res.data.videos);\n        setCalories(res.data.caloriesBurned);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getData();\n  }, []);\n\n  return (\n    <div className={css.wrapper}>\n      <div className={css.videos_wrapper}>\n        <svg className={css.play}>\n          <use href={sprite + '#play_icon'}></use>\n        </svg>\n        <div className={css.wrap_text}>\n          <p className={css.num}>{videos !== null ? videos : '350+'}</p>\n          <p>Video tutorial</p>\n        </div>\n      </div>\n\n      <div className={css.calories_wrapper}>\n        <svg className={css.human_icon}>\n          <use href={sprite + '#running_stick_figure_icon'}></use>\n        </svg>\n        <div className={css.wrap_text2}>\n          <p className={css.num_cal}>{calories !== null ? calories : '500'}</p>\n          <p className={css.cal}>cal</p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default StatisticInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignInPage_container__ggoLX\"};","// extracted by mini-css-extract-plugin\nexport default {\"loginContainer\":\"SignInForm_loginContainer__QyM0t\",\"formContainer\":\"SignInForm_formContainer__XIarE\",\"link\":\"SignInForm_link__nf+u8\",\"description\":\"SignInForm_description__46Gxg\",\"btn\":\"SignInForm_btn__ZrkTW\",\"form\":\"SignInForm_form__5J56V\",\"title\":\"SignInForm_title__eps-m\",\"titleDescription\":\"SignInForm_titleDescription__jkvG+\",\"input\":\"SignInForm_input__SoPYj\",\"error\":\"SignInForm_error__6QASg\",\"success\":\"SignInForm_success__jVWMF\",\"messageInput\":\"SignInForm_messageInput__+BMWd\",\"errorText\":\"SignInForm_errorText__tBDUL\",\"successText\":\"SignInForm_successText__JfWlN\",\"errorSvg\":\"SignInForm_errorSvg__dzkTe\",\"successSvg\":\"SignInForm_successSvg__DSRRf\",\"eyeIcon\":\"SignInForm_eyeIcon__+m93s\",\"eyeIconOff\":\"SignInForm_eyeIconOff__4txib\"};","import { NavLink } from \"react-router-dom\";\nimport style from './SignInForm.module.css'\nimport sprite from '../../images/svg/sprite.svg';\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/operations\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useState } from \"react\";\n\nconst SignInForm = () => {\n    const [showPassword, setShowPassword] = useState(false);\n    const dispatch = useDispatch();\n\n    const SignInSchema = Yup.object().shape({\n        email: Yup.string()\n          .min(2, 'Too Short Email!')\n          .max(50, 'Too Long Email!')\n          .email('Error email')\n          .required('Required'),\n        password: Yup.string()\n          .required('Required')\n          .min(2)\n          .max(50),\n      });\n\n    return (\n        <div className={style.loginContainer}>\n            <div className={style.formContainer}>\n                <h1 className={style.title}>Sign In</h1>\n                <p className={style.titleDescription}>Welcome! Please enter your credentials to login to the platform:</p>\n                <Formik \n                    initialValues={{\n                        email: '',\n                        password: '',\n                      }}\n                      validationSchema={SignInSchema}\n                      onSubmit={values => {\n                        dispatch(logIn(values));\n                      }}\n                >\n                    {({ errors, touched }) => (\n                        <Form className={style.form}>\n                            <label>\n                                <Field \n                                type=\"email\" \n                                required \n                                placeholder=\"Email\" \n                                name=\"email\" \n                                className={`\n                                    ${style.input} ${errors.email && touched.email ? style.error : ''} \n                                    ${touched.email && !errors.email ? style.success : ''}`}\n                                />\n                                {errors.email && touched.email && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.errorSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <ErrorMessage component='p' className={style.errorText} name='email'/>\n                                    </div>\n                                )}\n                                {!errors.email && touched.email && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.successSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <p className={style.successText}>Success email</p>\n                                    </div>\n                                )}\n                            </label>\n                            <label>\n                                <Field \n                                type={showPassword ? 'text' : 'password'}\n                                required \n                                placeholder=\"Password\" \n                                name=\"password\" \n                                minLength={7} \n                                className={`\n                                    ${style.input} ${errors.password && touched.password ? style.error : ''} \n                                    ${touched.password && !errors.password ? style.success : ''}`} \n                                />\n                                {errors.password && touched.password && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.errorSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <ErrorMessage component='p' className={style.errorText} name='password'/>\n                                    </div>\n                                )}\n                                {!errors.password && touched.password && (\n                                    <div className={style.messageInput}>\n                                        <svg className={style.successSvg}>\n                                            <use href={sprite + '#icon-checkbox-circle-fill'}></use>\n                                        </svg>\n                                        <p className={style.successText}>Success password</p>\n                                    </div>\n                                )}\n                                {!showPassword && <svg\n                                    className={style.eyeIcon}\n                                    onClick={() => setShowPassword(!showPassword)}\n                                >\n                                    <use href={sprite + '#icon-eye'}></use>\n                                </svg>}\n                                {showPassword && <svg\n                                    className={style.eyeIconOff}\n                                    onClick={() => setShowPassword(!showPassword)}\n                                >\n                                    <use href={sprite + '#icon-eye-off'}></use>\n                                </svg>}\n                            </label>\n                            <button type=\"submit\" className={style.btn}>Sign In</button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n            <p className={style.description}>Don’t have an account?&nbsp;\n                <NavLink to={'/signup'} className={style.link}>Sign Up</NavLink>\n            </p>\n        </div>\n    )\n}\n\nexport default SignInForm;","import React from 'react';\nimport style from './SignInPage.module.css';\nimport StatisticInfo from 'components/StatisticsInfo/StatisticsInfo';\nimport SignInForm from 'components/SignInForm/SignInForm';\nimport { Rings } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\n\nconst SignInPage = () => {\n  const isLoading = useSelector(state => state.auth.isLoading);\n  return (\n    <>\n      {isLoading ? (<Rings\n      height=\"100\"\n      width=\"100\"\n      color=\"#e6533c\"\n      ariaLabel=\"rings-loading\"\n      wrapperStyle={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100vh',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      firstLineColor=\"\"\n      middleLineColor=\"\"\n      lastLineColor=\"\"\n    />):(\n      <div className={style.container}>\n        <SignInForm/>\n        <StatisticInfo/>\n      </div>)}\n    </>\n  )\n}\n\nexport default SignInPage\n"],"names":["axios","StatisticInfo","calories","setCalories","useState","videos","setVideos","useEffect","async","res","data","caloriesBurned","error","console","getData","_jsxs","className","css","children","_jsx","href","sprite","SignInForm","showPassword","setShowPassword","dispatch","useDispatch","SignInSchema","Yup","shape","email","min","max","required","password","style","Formik","initialValues","validationSchema","onSubmit","values","logIn","_ref","errors","touched","Form","Field","type","placeholder","name","concat","ErrorMessage","component","minLength","onClick","NavLink","to","SignInPage","isLoading","useSelector","state","auth","_Fragment","Rings","height","width","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor"],"sourceRoot":""}