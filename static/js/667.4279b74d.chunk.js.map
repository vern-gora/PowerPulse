{"version":3,"file":"static/js/667.4279b74d.chunk.js","mappings":"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","sources":["components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/ProductsItem/ProductsItem.module.css?fdd6","redux/products/selectors.js","components/ProductsItem/ProductsItem.jsx","webpack://react-homework-template/./src/components/FilterProducts/FilterProducts.module.css?371b","components/FilterProducts/FilterProducts.jsx","webpack://react-homework-template/./src/components/DropDownSelectors/DropDownSelectors.module.css?d03b","components/DropDownSelectors/DropDownSelectors.jsx","webpack://react-homework-template/./src/pages/ProductsPage/ProductsPage.module.css?2903","webpack://react-homework-template/./src/components/AddProductSuccess/AddProductSuccess.module.css?719b","components/AddProductSuccess/AddProductSuccess.jsx","webpack://react-homework-template/./src/components/BasicModalWindow/BasicModalWindow.module.css?b261","components/BasicModalWindow/BasicModalWindow.jsx","pages/ProductsPage/ProductsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import React from 'react';\n\nconst TitlePage = ({ title, style }) => <h2 className={style}>{title}</h2>;\n\nexport default TitlePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"ProductsItem_cardContainer__Ho9Ps\",\"cardHeadContainer\":\"ProductsItem_cardHeadContainer__mQH6j\",\"cardCategoryName\":\"ProductsItem_cardCategoryName__tWROl\",\"addProductBtn\":\"ProductsItem_addProductBtn__FlW25\",\"addBtnIcon\":\"ProductsItem_addBtnIcon__D7JeO\",\"recommendWrapper\":\"ProductsItem_recommendWrapper__atAvR\",\"labelRecommend\":\"ProductsItem_labelRecommend__ZlNgg\",\"labelNotRecommended\":\"ProductsItem_labelNotRecommended__wZIIp\",\"recommendText\":\"ProductsItem_recommendText__tCLoD\",\"singleCardTitle\":\"ProductsItem_singleCardTitle__-ILEZ\",\"cardRunningIcon\":\"ProductsItem_cardRunningIcon__CZ0xb\",\"cardHeaderWrapper\":\"ProductsItem_cardHeaderWrapper__D6Zzb\",\"cardProductStats\":\"ProductsItem_cardProductStats__0Ausm\",\"cardProdStatItem\":\"ProductsItem_cardProdStatItem__CpHza\",\"cardProdStatItemText\":\"ProductsItem_cardProdStatItemText__1Sjmb\",\"warning\":\"ProductsItem_warning__JGZAz\",\"highlightedText\":\"ProductsItem_highlightedText__DiAzj\",\"notFoundText\":\"ProductsItem_notFoundText__zpC8e\",\"productItem\":\"ProductsItem_productItem__rV6k2\"};","const getProducts = state => state.products.productList;\nconst getIsLoading = state => state.products.isLoading;\nconst getProductsCategories = state => state.products.productsCategories;\nconst getFilter = state => state.products.filter;\nconst getCurrentProduct = state => state.products.currentProduct;\nconst getFilteredProducts = state => state.products.filteredProducts;\n\nconst productsSelectors = {\n  getProducts,\n  getIsLoading,\n  getProductsCategories,\n  getFilter,\n  getCurrentProduct,\n  getFilteredProducts,\n};\n\nexport default productsSelectors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './ProductsItem.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst ProductsItem = ({\n  onOpenModal,\n  categoryFilter,\n  filterByRecommended,\n  filterByBloodType,\n}) => {\n  const products = useSelector(productsSelectors.getProducts);\n  const filter = useSelector(productsSelectors.getFilter);\n\n  const currentUser = useSelector(selectUser);\n  const userBloodType = currentUser.blood || '1';\n\n  const filteredProducts = products\n    .filter(({ title }) => title.toLowerCase().includes(filter.toLowerCase()))\n    .filter(({ category }) =>\n      category.toLowerCase().includes(categoryFilter.toLowerCase())\n    );\n\n  const onFilterProducts = () => {\n    if (filterByBloodType && filterByRecommended) {\n      return filteredProducts.filter(\n        ({ groupBloodNotAllowed }) => groupBloodNotAllowed[userBloodType]\n      );\n    } else if (filterByBloodType && !filterByRecommended) {\n      return filteredProducts.filter(\n        ({ groupBloodNotAllowed }) => !groupBloodNotAllowed[userBloodType]\n      );\n    } else {\n      return filteredProducts;\n    }\n  };\n\n  return onFilterProducts().length === 0 ? (\n    <div className={style.warning}>\n      <p className={style.notFoundText}>\n        <span className={style.highlightedText}>\n          Sorry, no results were found\n        </span>{' '}\n        for the product filters you selected. You may want to consider other\n        search options to find the product you want. Our range is wide and you\n        have the opportunity to find more options that suit your needs.\n      </p>\n      <p className={style.highlightedText}>\n        Try changing the search parameters.\n      </p>\n    </div>\n  ) : (\n    onFilterProducts().map(\n      ({ category, calories, title, weight, _id, groupBloodNotAllowed }) => {\n        return (\n          <li key={_id} data-id={_id} className={style.productItem}>\n            <div className={style.cardContainer}>\n              <div className={style.cardHeadContainer}>\n                <div className={style.cardCategoryName}>Diet</div>\n                <div className={style.recommendWrapper}>\n                  <span\n                    className={\n                      groupBloodNotAllowed[userBloodType]\n                        ? style.labelRecommend\n                        : style.labelNotRecommended\n                    }\n                  ></span>\n                  <p className={style.recommendText}>Recommended</p>\n                </div>\n                <button\n                  type=\"button\"\n                  className={style.addProductBtn}\n                  onClick={onOpenModal}\n                >\n                  Add\n                  <svg className={style.addBtnIcon} width=\"16\" height=\"16\">\n                    <use href={sprite + '#arrow_add_icon'}></use>\n                  </svg>\n                </button>\n              </div>\n              <div className={style.cardHeaderWrapper}>\n                <svg className={style.cardRunningIcon} width=\"24\" height=\"24\">\n                  <use href={sprite + '#running_stick_figure_icon'}></use>\n                </svg>\n                <h3 className={style.singleCardTitle}>{title}</h3>\n              </div>\n              <div className={style.cardProductStats}>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Calories:</span>{' '}\n                  {calories}\n                </p>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Category: </span>\n                  {category}\n                </p>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Weight:</span>{' '}\n                  {weight}\n                </p>\n              </div>\n            </div>\n          </li>\n        );\n      }\n    )\n  );\n};\n\nexport default ProductsItem;\n\nProductsItem.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n  categoryFilter: PropTypes.string.isRequired,\n  filterByRecommended: PropTypes.bool.isRequired,\n  filterByBloodType: PropTypes.bool.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchLabel\":\"FilterProducts_searchLabel__FkkTn\",\"searchIcon\":\"FilterProducts_searchIcon__nn4HX\",\"filterBtn\":\"FilterProducts_filterBtn__hcT2I\",\"searchField\":\"FilterProducts_searchField__1sFnJ\",\"clearSearchIcon\":\"FilterProducts_clearSearchIcon__F+9OF\",\"clearFilterBtn\":\"FilterProducts_clearFilterBtn__R6Yqk\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport style from './FilterProducts.module.css';\nimport sprite from '../../images/svg/sprite.svg';\n// import productsSelectors from 'redux/products/selectors';\nimport { filterProducts, clearFilter } from 'redux/products/productsSlice';\n// import productsOperations from 'redux/products/operations';\n\nconst FilterProducts = () => {\n  const [isFilterEmpty, setIsFilterEmpty] = useState(true);\n\n  const dispatch = useDispatch();\n  // const filter = useSelector(productsSelectors.getFilter);\n\n  const onFilterChange = e => {\n    if (e.currentTarget.value === '') {\n      setIsFilterEmpty(true);\n      return;\n    }\n    setIsFilterEmpty(false);\n  };\n\n  const onFocusChange = e => {\n    dispatch(filterProducts(e.currentTarget.value));\n\n    // const searchParam = {\n    //   category: `${filter}`,\n    // };\n    // dispatch(productsOperations.getFilteredProducts(searchParam));\n  };\n\n  const handleFilter = e => {\n    e.currentTarget.nextElementSibling.value = '';\n\n    setIsFilterEmpty(true);\n    dispatch(clearFilter());\n  };\n\n  return (\n    <>\n      <label className={style.searchLabel}>\n        <button type=\"button\" className={style.filterBtn}>\n          <svg className={style.searchIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#search_icon'}></use>\n          </svg>\n        </button>\n        {!isFilterEmpty && (\n          <button\n            className={style.clearFilterBtn}\n            type=\"button\"\n            onClick={handleFilter}\n          >\n            <svg className={style.clearSearchIcon} width=\"18\" height=\"18\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n        )}\n        <input\n          className={style.searchField}\n          type=\"text\"\n          placeholder=\"Search\"\n          // value={filter}\n          onChange={onFilterChange}\n          onBlur={onFocusChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default FilterProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"categoryListWrapper\":\"DropDownSelectors_categoryListWrapper__ML40J\",\"dropBtnDown\":\"DropDownSelectors_dropBtnDown__59GGP\",\"dropDownIcon\":\"DropDownSelectors_dropDownIcon__5aEDt\",\"catDropList\":\"DropDownSelectors_catDropList__YaOVf\",\"categoryItem\":\"DropDownSelectors_categoryItem__7CNZq\",\"selectCatBtn\":\"DropDownSelectors_selectCatBtn__HVorH\",\"dropDownAllWrapper\":\"DropDownSelectors_dropDownAllWrapper__2UmxQ\",\"dropAllBtn\":\"DropDownSelectors_dropAllBtn__FRZLp\",\"allDropList\":\"DropDownSelectors_allDropList__mm178\",\"typeItem\":\"DropDownSelectors_typeItem__76rCW\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport style from './DropDownSelectors.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport productsSelectors from 'redux/products/selectors';\nimport productsOperations from 'redux/products/operations';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst DropDownSelectors = ({ onCategoryFilterSelect, onTypeSelect }) => {\n  const [isCategoryListOpen, setCategoryIsListOpen] = useState(false);\n  const [isTypeListOpen, setTypeListOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const currentUser = useSelector(selectUser);\n\n  const categories = useSelector(productsSelectors.getProductsCategories);\n\n  const handleDropDownCategoryList = () => {\n    setCategoryIsListOpen(true);\n    setTypeListOpen(false);\n\n    if (isCategoryListOpen) {\n      setCategoryIsListOpen(false);\n    }\n  };\n\n  const handleDropDownType = () => {\n    setTypeListOpen(true);\n    setCategoryIsListOpen(false);\n\n    if (isTypeListOpen) {\n      setTypeListOpen(false);\n    }\n  };\n\n  const onCategorySelect = e => {\n    const selectedCategory = e.currentTarget.dataset.category;\n\n    console.log(e.currentTarget.value);\n\n    onCategoryFilterSelect(selectedCategory);\n    setCategoryIsListOpen(false);\n  };\n\n  const onTypeSelection = e => {\n    const type = e.currentTarget.dataset.type;\n\n    onTypeSelect(type);\n\n    setTypeListOpen(false);\n\n    const userBloodType = currentUser.blood;\n    const searchParam = { category: `${userBloodType}` };\n    dispatch(productsOperations.getFilteredProducts(searchParam));\n  };\n\n  return (\n    <>\n      <div className={style.categoryListWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropBtnDown}\n          onClick={handleDropDownCategoryList}\n          value=\"Categories\"\n        >\n          Categories\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n        {isCategoryListOpen && (\n          <ul className={style.catDropList}>\n            <li key={nanoid(5)} className={style.categoryItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                data-category={'all'}\n                onClick={onCategorySelect}\n              >\n                All categories\n              </button>\n            </li>\n            {categories.map(category => {\n              return (\n                <li key={nanoid(5)} className={style.categoryItem}>\n                  <button\n                    type=\"button\"\n                    className={style.selectCatBtn}\n                    onClick={onCategorySelect}\n                    data-category={category}\n                  >\n                    {category}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      {/* !!!!!!!!! */}\n      <div className={style.dropDownAllWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropAllBtn}\n          onClick={handleDropDownType}\n        >\n          All\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n\n        {isTypeListOpen && (\n          <ul className={style.allDropList}>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"all\"\n              >\n                All\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"recommended\"\n              >\n                Recommended\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"not-recommended\"\n              >\n                Not recommended\n              </button>\n            </li>\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DropDownSelectors;\n\nDropDownSelectors.propTypes = {\n  onCategoryFilterSelect: PropTypes.func.isRequired,\n  onTypeSelect: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dropDownContainer\":\"ProductsPage_dropDownContainer__VJh-k\",\"productsTitle\":\"ProductsPage_productsTitle__IauG3\",\"dropDownAll\":\"ProductsPage_dropDownAll__HTij7\",\"prodContainer\":\"ProductsPage_prodContainer__QPuXY\",\"desktopCntrlWrap\":\"ProductsPage_desktopCntrlWrap__OtYxc\",\"cardsWrapper\":\"ProductsPage_cardsWrapper__k697g\",\"categoryListDrop\":\"ProductsPage_categoryListDrop__MoA-S\",\"filtersTitle\":\"ProductsPage_filtersTitle__MASnC\",\"filtersCtrls\":\"ProductsPage_filtersCtrls__Sl8V6\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"AddProductSuccess_overlay__bgeXN\",\"successWrap\":\"AddProductSuccess_successWrap__borPA\",\"closeBasicModal\":\"AddProductSuccess_closeBasicModal__YLoav\",\"closeBasicModalIcon\":\"AddProductSuccess_closeBasicModalIcon__jkeXD\",\"successData\":\"AddProductSuccess_successData__MrYia\",\"successImg\":\"AddProductSuccess_successImg__y+iQ6\",\"wellDone\":\"AddProductSuccess_wellDone__ankeW\",\"kcal\":\"AddProductSuccess_kcal__SUwX5\",\"kcalNumber\":\"AddProductSuccess_kcalNumber__QwIs1\",\"nextBtn\":\"AddProductSuccess_nextBtn__Gd9E-\",\"linkWrapper\":\"AddProductSuccess_linkWrapper__IRdIn\",\"link\":\"AddProductSuccess_link__mTD8S\",\"linkArrow\":\"AddProductSuccess_linkArrow__vAYUI\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport style from './AddProductSuccess.module.css';\nimport image from 'images/avocado.png';\nimport sprite from '../../images/svg/sprite.svg';\n\nconst AddProductSuccess = ({\n  onCloseModal,\n  consumedCalories,\n  handleBackdropClick,\n}) => {\n  return (\n    <div className={style.overlay} onClick={handleBackdropClick}>\n      <div className={style.successWrap}>\n        <button\n          type=\"button\"\n          className={style.closeBasicModal}\n          onClick={onCloseModal}\n        >\n          <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n            <use href={sprite + '#close_icon'}></use>\n          </svg>\n        </button>\n        <div className={style.successData}>\n          <img src={image} alt=\"Success\" className={style.successImg} />\n          <p className={style.wellDone}>Well done</p>\n          <p className={style.kcal}>\n            Calories:{' '}\n            <span className={style.kcalNumber}>{consumedCalories}</span>\n          </p>\n          <button\n            type=\"button\"\n            className={style.nextBtn}\n            onClick={onCloseModal}\n          >\n            Next product\n          </button>\n          <div className={style.linkWrapper}>\n            <Link to=\"/diary\" className={style.link}>\n              To the diary{' '}\n            </Link>\n            <svg width=\"16\" height=\"16\">\n              <use\n                href={sprite + '#arrow_add_icon'}\n                className={style.linkArrow}\n              ></use>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProductSuccess;\n\nAddProductSuccess.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  consumedCalories: PropTypes.func.isRequired,\n  handleBackdropClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"BasicModalWindow_overlay__s-mcD\",\"basicModalContainer\":\"BasicModalWindow_basicModalContainer__P3nRC\",\"selectedProductDescr\":\"BasicModalWindow_selectedProductDescr__+Yh-+\",\"productCardPopUp\":\"BasicModalWindow_productCardPopUp__d3+uW\",\"caloriesCount\":\"BasicModalWindow_caloriesCount__qECr1\",\"basicModalSelectedProduct\":\"BasicModalWindow_basicModalSelectedProduct__z2jpB\",\"basicModalFormInput\":\"BasicModalWindow_basicModalFormInput__bpJz9\",\"weightLabel\":\"BasicModalWindow_weightLabel__gPTUQ\",\"closeBasicModal\":\"BasicModalWindow_closeBasicModal__hSwTK\",\"closeBasicModalIcon\":\"BasicModalWindow_closeBasicModalIcon__bsEtp\",\"basicModalForm\":\"BasicModalWindow_basicModalForm__fk1Ur\",\"selectedProdBtns\":\"BasicModalWindow_selectedProdBtns__d3Fm6\",\"addDiaryBtn\":\"BasicModalWindow_addDiaryBtn__nsOIB\",\"cancelAddBtn\":\"BasicModalWindow_cancelAddBtn__eWEAQ\",\"kcalNumber\":\"BasicModalWindow_kcalNumber__dxhRY\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport AddProductSuccess from 'components/AddProductSuccess/AddProductSuccess';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './BasicModalWindow.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { addProductToDiary } from 'redux/diary/operations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst BasicModalWindow = ({ onCloseModal }) => {\n  const [caloriesNumber, setCaloriesNumber] = useState(0);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onCloseModal]);\n\n  const dispatch = useDispatch();\n\n  const product = useSelector(productsSelectors.getCurrentProduct);\n  const productTitle = product.title;\n\n  const CustomInputComponent = props => (\n    <input\n      className={style.basicModalSelectedProduct}\n      type=\"text\"\n      value={productTitle}\n      {...props}\n    />\n  );\n\n  const handleChange = e => {\n    setCaloriesNumber(e.currentTarget.value);\n  };\n\n  const consumedCalories = (caloriesNumber * product.calories) / 100;\n\n  const handleProductAdd = e => {\n    e.preventDefault();\n\n    const data = {\n      productId: product._id,\n      amount: caloriesNumber,\n      calories: consumedCalories,\n    };\n\n    dispatch(addProductToDiary(data));\n\n    if (!consumedCalories) {\n      setIsSuccess(false);\n      return;\n    }\n\n    setIsSuccess(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onCloseModal();\n    }\n  };\n\n  return createPortal(\n    !isSuccess ? (\n      <div className={style.overlay} onClick={handleBackdropClick}>\n        <div className={style.basicModalContainer}>\n          <button\n            type=\"button\"\n            className={style.closeBasicModal}\n            onClick={onCloseModal}\n          >\n            <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n          <div className={style.selectedProductDescr}>\n            <div className={style.productCardPopUp}>\n              <Formik initialValues={{ product: productTitle }}>\n                <Form className={style.basicModalForm}>\n                  <Field\n                    as={CustomInputComponent}\n                    name=\"product\"\n                    value={productTitle}\n                    className={style.basicModalSelectedProduct}\n                  />\n                  <Field\n                    className={style.basicModalFormInput}\n                    type=\"text\"\n                    name=\"weight\"\n                    label=\"grams\"\n                    onChange={handleChange}\n                  />\n                </Form>\n              </Formik>\n              <span className={style.weightLabel}>grams</span>\n            </div>\n            <p className={style.caloriesCount}>\n              Calories:\n              <span className={style.kcalNumber}>\n                {' '}\n                {consumedCalories ? consumedCalories : 0}\n              </span>\n            </p>\n            <div className={style.selectedProdBtns}>\n              <button\n                type=\"submit\"\n                className={style.addDiaryBtn}\n                onClick={handleProductAdd}\n              >\n                Add to diary\n              </button>\n              <button\n                type=\"button\"\n                className={style.cancelAddBtn}\n                onClick={onCloseModal}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <AddProductSuccess\n        onCloseModal={onCloseModal}\n        consumedCalories={consumedCalories}\n        handleBackdropClick={handleBackdropClick}\n      />\n    ),\n    modalRoot\n  );\n};\n\nexport default BasicModalWindow;\n\nBasicModalWindow.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport ProductsItem from 'components/ProductsItem/ProductsItem';\nimport FilterProducts from 'components/FilterProducts/FilterProducts';\nimport DropDownSelectors from 'components/DropDownSelectors/DropDownSelectors';\nimport { Rings } from 'react-loader-spinner';\nimport style from './ProductsPage.module.css';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport productsOperations from 'redux/products/operations';\nimport productsSelectors from 'redux/products/selectors';\nimport { getUserParams } from 'redux/auth/operations';\n\nconst ProductsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [filterByRecommended, setFilterByRecommended] = useState(false);\n  const [filterByBloodType, setFilterByBloodType] = useState(false);\n\n  const dispatch = useDispatch();\n  const products = useSelector(productsSelectors.getProducts);\n\n  useEffect(() => {\n    dispatch(getUserParams());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProducts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProductsCategories());\n  }, [dispatch]);\n\n  const onOpenModal = e => {\n    const chosenProduct = e.target.closest('li');\n    const chosenProductId = chosenProduct.dataset.id;\n    dispatch(productsOperations.getProductById(chosenProductId));\n\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onCategoryFilterSelect = category => {\n    if (category === 'all') {\n      setCategoryFilter('');\n      return;\n    }\n\n    setCategoryFilter(category);\n  };\n\n  const onTypeSelect = type => {\n    switch (type) {\n      // case 'all':\n      //   break;\n      case 'recommended':\n        setFilterByRecommended(true);\n        setFilterByBloodType(true);\n        break;\n      case 'not-recommended':\n        setFilterByRecommended(false);\n        setFilterByBloodType(true);\n        break;\n      default:\n        setFilterByRecommended(false);\n        setFilterByBloodType(false);\n    }\n  };\n\n  return (\n    <div className={style.prodContainer}>\n      <p className={style.filtersTitle}>Filters</p>\n      <div className={style.desktopCntrlWrap}>\n        <TitlePage style={style.productsTitle} title=\"Products\" />\n        <div className={style.filtersCtrls}>\n          <FilterProducts />\n          <div className={style.dropDownContainer}>\n            <DropDownSelectors\n              onCategoryFilterSelect={onCategoryFilterSelect}\n              onTypeSelect={onTypeSelect}\n            />\n          </div>\n        </div>\n      </div>\n\n      {products.length !== 0 ? (\n        // <CustomScrollbar>\n        <ul className={style.cardsWrapper}>\n          <ProductsItem\n            onOpenModal={onOpenModal}\n            categoryFilter={categoryFilter}\n            filterByRecommended={filterByRecommended}\n            filterByBloodType={filterByBloodType}\n          />\n        </ul>\n      ) : (\n        // </CustomScrollbar>\n        <Rings\n          height=\"100\"\n          width=\"100\"\n          color=\"#e6533c\"\n          ariaLabel=\"rings-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100vh',\n          }}\n          wrapperClass=\"\"\n          visible={true}\n          firstLineColor=\"\"\n          middleLineColor=\"\"\n          lastLineColor=\"\"\n        />\n      )}\n      {showModal && <BasicModalWindow onCloseModal={onCloseModal} />}\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_ref","title","style","_jsx","className","children","getProducts","state","products","productList","getIsLoading","isLoading","getProductsCategories","productsCategories","getFilter","filter","getCurrentProduct","currentProduct","getFilteredProducts","filteredProducts","onOpenModal","categoryFilter","filterByRecommended","filterByBloodType","useSelector","productsSelectors","userBloodType","selectUser","blood","_ref2","toLowerCase","includes","_ref3","category","onFilterProducts","_ref4","groupBloodNotAllowed","_ref5","length","_jsxs","map","_ref6","calories","weight","_id","type","onClick","width","height","href","sprite","FilterProducts","isFilterEmpty","setIsFilterEmpty","useState","dispatch","useDispatch","_Fragment","e","currentTarget","nextElementSibling","value","clearFilter","placeholder","onChange","onBlur","filterProducts","onCategoryFilterSelect","onTypeSelect","isCategoryListOpen","setCategoryIsListOpen","isTypeListOpen","setTypeListOpen","currentUser","categories","onCategorySelect","selectedCategory","dataset","console","log","onTypeSelection","searchParam","concat","productsOperations","handleDropDownCategoryList","nanoid","handleDropDownType","onCloseModal","consumedCalories","handleBackdropClick","src","image","alt","Link","to","modalRoot","document","querySelector","caloriesNumber","setCaloriesNumber","isSuccess","setIsSuccess","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","product","productTitle","target","createPortal","AddProductSuccess","Formik","initialValues","Form","Field","as","props","name","label","preventDefault","data","productId","amount","addProductToDiary","ProductsPage","showModal","setShowModal","setCategoryFilter","setFilterByRecommended","setFilterByBloodType","getUserParams","TitlePage","DropDownSelectors","ProductsItem","chosenProductId","closest","id","Rings","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","BasicModalWindow","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}