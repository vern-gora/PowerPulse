{"version":3,"file":"static/js/667.edf4ec58.chunk.js","mappings":"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","sources":["components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/ProductsItem/ProductsItem.module.css?fdd6","redux/products/selectors.js","components/ProductsItem/ProductsItem.jsx","webpack://react-homework-template/./src/components/FilterProducts/FilterProducts.module.css?371b","components/FilterProducts/FilterProducts.jsx","webpack://react-homework-template/./src/components/DropDownSelectors/DropDownSelectors.module.css?d03b","components/DropDownSelectors/DropDownSelectors.jsx","webpack://react-homework-template/./src/pages/ProductsPage/ProductsPage.module.css?2903","webpack://react-homework-template/./src/components/AddProductSuccess/AddProductSuccess.module.css?719b","components/AddProductSuccess/AddProductSuccess.jsx","webpack://react-homework-template/./src/components/BasicModalWindow/BasicModalWindow.module.css?b261","components/BasicModalWindow/BasicModalWindow.jsx","pages/ProductsPage/ProductsPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import React from 'react';\n\nconst TitlePage = ({ title, style }) => <h2 className={style}>{title}</h2>;\n\nexport default TitlePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"ProductsItem_cardContainer__Ho9Ps\",\"cardHeadContainer\":\"ProductsItem_cardHeadContainer__mQH6j\",\"cardCategoryName\":\"ProductsItem_cardCategoryName__tWROl\",\"addProductBtn\":\"ProductsItem_addProductBtn__FlW25\",\"addBtnIcon\":\"ProductsItem_addBtnIcon__D7JeO\",\"recommendWrapper\":\"ProductsItem_recommendWrapper__atAvR\",\"labelRecommend\":\"ProductsItem_labelRecommend__ZlNgg\",\"labelNotRecommended\":\"ProductsItem_labelNotRecommended__wZIIp\",\"recommendText\":\"ProductsItem_recommendText__tCLoD\",\"singleCardTitle\":\"ProductsItem_singleCardTitle__-ILEZ\",\"cardRunningIcon\":\"ProductsItem_cardRunningIcon__CZ0xb\",\"cardHeaderWrapper\":\"ProductsItem_cardHeaderWrapper__D6Zzb\",\"cardProductStats\":\"ProductsItem_cardProductStats__0Ausm\",\"cardProdStatItem\":\"ProductsItem_cardProdStatItem__CpHza\",\"cardProdStatItemText\":\"ProductsItem_cardProdStatItemText__1Sjmb\",\"warning\":\"ProductsItem_warning__JGZAz\",\"highlightedText\":\"ProductsItem_highlightedText__DiAzj\",\"notFoundText\":\"ProductsItem_notFoundText__zpC8e\",\"productItem\":\"ProductsItem_productItem__rV6k2\"};","const getProducts = state => state.products.productList;\nconst getIsLoading = state => state.products.isLoading;\nconst getProductsCategories = state => state.products.productsCategories;\nconst getFilter = state => state.products.filter;\nconst getCurrentProduct = state => state.products.currentProduct;\nconst getFilteredProducts = state => state.products.filteredProducts;\n\nconst productsSelectors = {\n  getProducts,\n  getIsLoading,\n  getProductsCategories,\n  getFilter,\n  getCurrentProduct,\n  getFilteredProducts,\n};\n\nexport default productsSelectors;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './ProductsItem.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst ProductsItem = ({\n  onOpenModal,\n  filterByRecommended,\n  filterByBloodType,\n}) => {\n  const products = useSelector(productsSelectors.getProducts);\n\n  const currentUser = useSelector(selectUser);\n  const userBloodType = currentUser.blood;\n\n  const onFilterProducts = () => {\n    if (products.length === 0) {\n      return products;\n    }\n\n    if (filterByBloodType && filterByRecommended) {\n      return products.filter(\n        ({ groupBloodNotAllowed }) => groupBloodNotAllowed[userBloodType]\n      );\n    } else if (filterByBloodType && !filterByRecommended) {\n      return products.filter(\n        ({ groupBloodNotAllowed }) => !groupBloodNotAllowed[userBloodType]\n      );\n    } else {\n      return products;\n    }\n  };\n\n  return onFilterProducts().length === 0 ? (\n    <div className={style.warning}>\n      <p className={style.notFoundText}>\n        <span className={style.highlightedText}>\n          Sorry, no results were found\n        </span>{' '}\n        for the product filters you selected. You may want to consider other\n        search options to find the product you want. Our range is wide and you\n        have the opportunity to find more options that suit your needs.\n      </p>\n      <p className={style.highlightedText}>\n        Try changing the search parameters.\n      </p>\n    </div>\n  ) : (\n    onFilterProducts().map(\n      ({ category, calories, title, weight, _id, groupBloodNotAllowed }) => {\n        return (\n          <li key={_id} data-id={_id} className={style.productItem}>\n            <div className={style.cardContainer}>\n              <div className={style.cardHeadContainer}>\n                <div className={style.cardCategoryName}>Diet</div>\n                <div className={style.recommendWrapper}>\n                  <span\n                    className={\n                      groupBloodNotAllowed[userBloodType]\n                        ? style.labelRecommend\n                        : style.labelNotRecommended\n                    }\n                  ></span>\n                  <p className={style.recommendText}>\n                    {groupBloodNotAllowed[userBloodType]\n                      ? 'Recommended'\n                      : 'Not recommended'}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className={style.addProductBtn}\n                  onClick={onOpenModal}\n                >\n                  Add\n                  <svg className={style.addBtnIcon} width=\"16\" height=\"16\">\n                    <use href={sprite + '#arrow_add_icon'}></use>\n                  </svg>\n                </button>\n              </div>\n              <div className={style.cardHeaderWrapper}>\n                <svg className={style.cardRunningIcon} width=\"24\" height=\"24\">\n                  <use href={sprite + '#running_stick_figure_icon'}></use>\n                </svg>\n                <h3 className={style.singleCardTitle}>{title}</h3>\n              </div>\n              <div className={style.cardProductStats}>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Calories:</span>{' '}\n                  {calories}\n                </p>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Category: </span>\n                  {category}\n                </p>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Weight:</span>{' '}\n                  {weight}\n                </p>\n              </div>\n            </div>\n          </li>\n        );\n      }\n    )\n  );\n};\n\nexport default ProductsItem;\n\nProductsItem.propTypes = {\n  onOpenModal: PropTypes.func.isRequired,\n  filterByRecommended: PropTypes.bool.isRequired,\n  filterByBloodType: PropTypes.bool.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchLabel\":\"FilterProducts_searchLabel__FkkTn\",\"searchIcon\":\"FilterProducts_searchIcon__nn4HX\",\"filterBtn\":\"FilterProducts_filterBtn__hcT2I\",\"searchField\":\"FilterProducts_searchField__1sFnJ\",\"clearSearchIcon\":\"FilterProducts_clearSearchIcon__F+9OF\",\"clearFilterBtn\":\"FilterProducts_clearFilterBtn__R6Yqk\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport style from './FilterProducts.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport { filterProducts, clearFilter } from 'redux/products/productsSlice';\nimport productsOperations from 'redux/products/operations';\n\nconst FilterProducts = ({ categoryFilter }) => {\n  const [isFilterEmpty, setIsFilterEmpty] = useState(true);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleSubmit = e => {\n      if (e.code === 'Enter') {\n        dispatch(filterProducts(e.target.value));\n      }\n    };\n\n    window.addEventListener('keydown', handleSubmit);\n\n    return () => window.removeEventListener('keydown', handleSubmit);\n  }, [dispatch]);\n\n  const onFilterChange = e => {\n    if (e.currentTarget.value === '') {\n      setIsFilterEmpty(true);\n      return;\n    }\n    setIsFilterEmpty(false);\n  };\n\n  const onFocusChange = e => {\n    dispatch(filterProducts(e.currentTarget.value));\n  };\n\n  const handleFilter = e => {\n    e.currentTarget.nextElementSibling.value = '';\n\n    setIsFilterEmpty(true);\n    dispatch(clearFilter());\n\n    if (categoryFilter) {\n      const searchParams = {\n        category: categoryFilter,\n      };\n      dispatch(productsOperations.getFilteredProducts(searchParams));\n      return;\n    }\n    dispatch(productsOperations.fetchProducts());\n  };\n\n  return (\n    <>\n      <label className={style.searchLabel}>\n        <button type=\"button\" className={style.filterBtn}>\n          <svg className={style.searchIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#search_icon'}></use>\n          </svg>\n        </button>\n        {!isFilterEmpty && (\n          <button\n            className={style.clearFilterBtn}\n            type=\"button\"\n            onClick={handleFilter}\n          >\n            <svg className={style.clearSearchIcon} width=\"18\" height=\"18\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n        )}\n        <input\n          className={style.searchField}\n          type=\"text\"\n          placeholder=\"Search\"\n          // value={filter}\n          onChange={onFilterChange}\n          onBlur={onFocusChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default FilterProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"categoryListWrapper\":\"DropDownSelectors_categoryListWrapper__ML40J\",\"dropBtnDown\":\"DropDownSelectors_dropBtnDown__59GGP\",\"dropDownIcon\":\"DropDownSelectors_dropDownIcon__5aEDt\",\"catDropList\":\"DropDownSelectors_catDropList__YaOVf\",\"categoryItem\":\"DropDownSelectors_categoryItem__7CNZq\",\"selectCatBtn\":\"DropDownSelectors_selectCatBtn__HVorH\",\"dropDownAllWrapper\":\"DropDownSelectors_dropDownAllWrapper__2UmxQ\",\"dropAllBtn\":\"DropDownSelectors_dropAllBtn__FRZLp\",\"allDropList\":\"DropDownSelectors_allDropList__mm178\",\"typeItem\":\"DropDownSelectors_typeItem__76rCW\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport style from './DropDownSelectors.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport productsSelectors from 'redux/products/selectors';\n\nconst DropDownSelectors = ({ onCategoryFilterSelect, onTypeSelect }) => {\n  const [isCategoryListOpen, setCategoryIsListOpen] = useState(false);\n  const [isTypeListOpen, setTypeListOpen] = useState(false);\n  const [type, setType] = useState('All');\n  const [categoryRender, setCategoryRender] = useState('Categories');\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        setCategoryIsListOpen(false);\n        setTypeListOpen(false);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [setTypeListOpen, setCategoryIsListOpen]);\n\n  const categories = useSelector(productsSelectors.getProductsCategories);\n\n  const handleDropDownCategoryList = () => {\n    setCategoryIsListOpen(true);\n    setTypeListOpen(false);\n\n    if (isCategoryListOpen) {\n      setCategoryIsListOpen(false);\n    }\n  };\n\n  const handleDropDownType = () => {\n    setTypeListOpen(true);\n    setCategoryIsListOpen(false);\n\n    if (isTypeListOpen) {\n      setTypeListOpen(false);\n    }\n  };\n\n  const onCategorySelect = e => {\n    const selectedCategory = e.currentTarget.dataset.category;\n\n    onCategoryFilterSelect(selectedCategory);\n\n    if (selectedCategory === 'all') {\n      setCategoryRender('Categories');\n    }\n    setCategoryRender(selectedCategory);\n\n    setCategoryIsListOpen(false);\n  };\n\n  const onTypeSelection = e => {\n    const type = e.currentTarget.dataset.type;\n\n    onTypeSelect(type);\n    handleType(type);\n\n    setTypeListOpen(false);\n  };\n\n  const handleType = selectedType => {\n    switch (selectedType) {\n      case 'all':\n        setType('All');\n        break;\n      case 'recommended':\n        setType('Recommended');\n        break;\n      case 'not-recommended':\n        setType('Not recommended');\n        break;\n      default:\n    }\n  };\n\n  return (\n    <>\n      <div className={style.categoryListWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropBtnDown}\n          onClick={handleDropDownCategoryList}\n          value=\"Categories\"\n        >\n          {categoryRender}\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n        {isCategoryListOpen && (\n          <ul className={style.catDropList}>\n            <li key={nanoid(5)} className={style.categoryItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                data-category={'all'}\n                onClick={onCategorySelect}\n              >\n                All categories\n              </button>\n            </li>\n            {categories.map(category => {\n              return (\n                <li key={nanoid(5)} className={style.categoryItem}>\n                  <button\n                    type=\"button\"\n                    className={style.selectCatBtn}\n                    onClick={onCategorySelect}\n                    data-category={category}\n                  >\n                    {category}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      {/* !!!!!!!!! */}\n      <div className={style.dropDownAllWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropAllBtn}\n          onClick={handleDropDownType}\n        >\n          {type}\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n\n        {isTypeListOpen && (\n          <ul className={style.allDropList}>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"all\"\n              >\n                All\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"recommended\"\n              >\n                Recommended\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"not-recommended\"\n              >\n                Not recommended\n              </button>\n            </li>\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DropDownSelectors;\n\nDropDownSelectors.propTypes = {\n  onCategoryFilterSelect: PropTypes.func.isRequired,\n  onTypeSelect: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"prodContainer\":\"ProductsPage_prodContainer__QPuXY\",\"dropDownContainer\":\"ProductsPage_dropDownContainer__VJh-k\",\"productsTitle\":\"ProductsPage_productsTitle__IauG3\",\"dropDownAll\":\"ProductsPage_dropDownAll__HTij7\",\"desktopCntrlWrap\":\"ProductsPage_desktopCntrlWrap__OtYxc\",\"cardsWrapper\":\"ProductsPage_cardsWrapper__k697g\",\"cardsWrapperFiltered\":\"ProductsPage_cardsWrapperFiltered__GSUmz\",\"categoryListDrop\":\"ProductsPage_categoryListDrop__MoA-S\",\"filtersTitle\":\"ProductsPage_filtersTitle__MASnC\",\"filtersCtrls\":\"ProductsPage_filtersCtrls__Sl8V6\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"AddProductSuccess_overlay__bgeXN\",\"successWrap\":\"AddProductSuccess_successWrap__borPA\",\"closeBasicModal\":\"AddProductSuccess_closeBasicModal__YLoav\",\"closeBasicModalIcon\":\"AddProductSuccess_closeBasicModalIcon__jkeXD\",\"successData\":\"AddProductSuccess_successData__MrYia\",\"successImg\":\"AddProductSuccess_successImg__y+iQ6\",\"wellDone\":\"AddProductSuccess_wellDone__ankeW\",\"kcal\":\"AddProductSuccess_kcal__SUwX5\",\"kcalNumber\":\"AddProductSuccess_kcalNumber__QwIs1\",\"nextBtn\":\"AddProductSuccess_nextBtn__Gd9E-\",\"linkWrapper\":\"AddProductSuccess_linkWrapper__IRdIn\",\"link\":\"AddProductSuccess_link__mTD8S\",\"linkArrow\":\"AddProductSuccess_linkArrow__vAYUI\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport style from './AddProductSuccess.module.css';\nimport image from 'images/avocado.png';\nimport sprite from '../../images/svg/sprite.svg';\n\nconst AddProductSuccess = ({\n  onCloseModal,\n  consumedCalories,\n  handleBackdropClick,\n}) => {\n  return (\n    <div className={style.overlay} onClick={handleBackdropClick}>\n      <div className={style.successWrap}>\n        <button\n          type=\"button\"\n          className={style.closeBasicModal}\n          onClick={onCloseModal}\n        >\n          <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n            <use href={sprite + '#close_icon'}></use>\n          </svg>\n        </button>\n        <div className={style.successData}>\n          <img src={image} alt=\"Success\" className={style.successImg} />\n          <p className={style.wellDone}>Well done</p>\n          <p className={style.kcal}>\n            Calories:{' '}\n            <span className={style.kcalNumber}>{consumedCalories}</span>\n          </p>\n          <button\n            type=\"button\"\n            className={style.nextBtn}\n            onClick={onCloseModal}\n          >\n            Next product\n          </button>\n          <div className={style.linkWrapper}>\n            <Link to=\"/diary\" className={style.link}>\n              To the diary{' '}\n            </Link>\n            <svg width=\"16\" height=\"16\">\n              <use\n                href={sprite + '#arrow_add_icon'}\n                className={style.linkArrow}\n              ></use>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProductSuccess;\n\nAddProductSuccess.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  consumedCalories: PropTypes.number.isRequired,\n  handleBackdropClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"BasicModalWindow_overlay__s-mcD\",\"basicModalContainer\":\"BasicModalWindow_basicModalContainer__P3nRC\",\"selectedProductDescr\":\"BasicModalWindow_selectedProductDescr__+Yh-+\",\"productCardPopUp\":\"BasicModalWindow_productCardPopUp__d3+uW\",\"caloriesCount\":\"BasicModalWindow_caloriesCount__qECr1\",\"basicModalSelectedProduct\":\"BasicModalWindow_basicModalSelectedProduct__z2jpB\",\"basicModalFormInput\":\"BasicModalWindow_basicModalFormInput__bpJz9\",\"weightLabel\":\"BasicModalWindow_weightLabel__gPTUQ\",\"closeBasicModal\":\"BasicModalWindow_closeBasicModal__hSwTK\",\"closeBasicModalIcon\":\"BasicModalWindow_closeBasicModalIcon__bsEtp\",\"basicModalForm\":\"BasicModalWindow_basicModalForm__fk1Ur\",\"selectedProdBtns\":\"BasicModalWindow_selectedProdBtns__d3Fm6\",\"addDiaryBtn\":\"BasicModalWindow_addDiaryBtn__nsOIB\",\"cancelAddBtn\":\"BasicModalWindow_cancelAddBtn__eWEAQ\",\"kcalNumber\":\"BasicModalWindow_kcalNumber__dxhRY\"};","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport AddProductSuccess from 'components/AddProductSuccess/AddProductSuccess';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './BasicModalWindow.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { addProductToDiary } from 'redux/diary/operations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst BasicModalWindow = ({ onCloseModal }) => {\n  const [caloriesNumber, setCaloriesNumber] = useState(0);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [onCloseModal]);\n\n  const dispatch = useDispatch();\n\n  const product = useSelector(productsSelectors.getCurrentProduct);\n  const productTitle = product.title;\n\n  const CustomInputComponent = props => (\n    <input\n      className={style.basicModalSelectedProduct}\n      type=\"text\"\n      value={productTitle}\n      {...props}\n    />\n  );\n\n  const handleChange = e => {\n    setCaloriesNumber(e.currentTarget.value);\n  };\n\n  const consumedCalories = (caloriesNumber * product.calories) / 100;\n\n  const handleProductAdd = e => {\n    e.preventDefault();\n\n    const data = {\n      productId: product._id,\n      amount: caloriesNumber,\n      calories: consumedCalories,\n    };\n\n    dispatch(addProductToDiary(data));\n\n    if (!consumedCalories) {\n      setIsSuccess(false);\n      return;\n    }\n\n    setIsSuccess(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onCloseModal();\n    }\n  };\n\n  return createPortal(\n    !isSuccess ? (\n      <div className={style.overlay} onClick={handleBackdropClick}>\n        <div className={style.basicModalContainer}>\n          <button\n            type=\"button\"\n            className={style.closeBasicModal}\n            onClick={onCloseModal}\n          >\n            <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n          <div className={style.selectedProductDescr}>\n            <div className={style.productCardPopUp}>\n              <Formik initialValues={{ product: productTitle }}>\n                <Form className={style.basicModalForm}>\n                  <Field\n                    as={CustomInputComponent}\n                    name=\"product\"\n                    value={productTitle}\n                    className={style.basicModalSelectedProduct}\n                  />\n                  <Field\n                    className={style.basicModalFormInput}\n                    type=\"text\"\n                    name=\"weight\"\n                    label=\"grams\"\n                    onChange={handleChange}\n                  />\n                </Form>\n              </Formik>\n              <span className={style.weightLabel}>grams</span>\n            </div>\n            <p className={style.caloriesCount}>\n              Calories:\n              <span className={style.kcalNumber}>\n                {' '}\n                {consumedCalories ? consumedCalories : 0}\n              </span>\n            </p>\n            <div className={style.selectedProdBtns}>\n              <button\n                type=\"submit\"\n                className={style.addDiaryBtn}\n                onClick={handleProductAdd}\n              >\n                Add to diary\n              </button>\n              <button\n                type=\"button\"\n                className={style.cancelAddBtn}\n                onClick={onCloseModal}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <AddProductSuccess\n        onCloseModal={onCloseModal}\n        consumedCalories={consumedCalories}\n        handleBackdropClick={handleBackdropClick}\n      />\n    ),\n    modalRoot\n  );\n};\n\nexport default BasicModalWindow;\n\nBasicModalWindow.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport ProductsItem from 'components/ProductsItem/ProductsItem';\nimport FilterProducts from 'components/FilterProducts/FilterProducts';\nimport DropDownSelectors from 'components/DropDownSelectors/DropDownSelectors';\nimport { Rings } from 'react-loader-spinner';\nimport style from './ProductsPage.module.css';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport productsOperations from 'redux/products/operations';\nimport productsSelectors from 'redux/products/selectors';\nimport { getUserParams } from 'redux/auth/operations';\n\nconst ProductsPage = () => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [showModal, setShowModal] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [filterByRecommended, setFilterByRecommended] = useState(false);\n  const [filterByBloodType, setFilterByBloodType] = useState(false);\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(productsSelectors.getIsLoading);\n  const filter = useSelector(productsSelectors.getFilter);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch(getUserParams());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const searchParams = {\n      search: filter,\n      category: categoryFilter,\n    };\n\n    if (Object.values(searchParams).join('') === '') {\n      dispatch(productsOperations.fetchProducts());\n      return;\n    }\n    dispatch(productsOperations.getFilteredProducts(searchParams));\n  }, [dispatch, filter, categoryFilter]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProductsCategories());\n  }, [dispatch]);\n\n  const onOpenModal = e => {\n    const chosenProduct = e.target.closest('li');\n    const chosenProductId = chosenProduct.dataset.id;\n    dispatch(productsOperations.getProductById(chosenProductId));\n\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onCategoryFilterSelect = category => {\n    if (category === 'all') {\n      setCategoryFilter('');\n      return;\n    }\n\n    setCategoryFilter(category);\n  };\n\n  const onTypeSelect = type => {\n    switch (type) {\n      case 'recommended':\n        setFilterByRecommended(true);\n        setFilterByBloodType(true);\n        break;\n      case 'not-recommended':\n        setFilterByRecommended(false);\n        setFilterByBloodType(true);\n        break;\n      default:\n        setFilterByRecommended(false);\n        setFilterByBloodType(false);\n    }\n  };\n\n  return (\n    <div className={style.prodContainer}>\n      {windowWidth >= 1440 && <p className={style.filtersTitle}>Filters</p>}\n      <div className={style.desktopCntrlWrap}>\n        <TitlePage style={style.productsTitle} title=\"Products\" />\n        <div className={style.filtersCtrls}>\n          <FilterProducts categoryFilter={categoryFilter} />\n          <div className={style.dropDownContainer}>\n            <DropDownSelectors\n              onCategoryFilterSelect={onCategoryFilterSelect}\n              onTypeSelect={onTypeSelect}\n            />\n          </div>\n        </div>\n      </div>\n\n      {!isLoading ? (\n        <ul\n          className={\n            categoryFilter.length === 0\n              ? style.cardsWrapper\n              : style.cardsWrapperFiltered\n          }\n        >\n          <ProductsItem\n            onOpenModal={onOpenModal}\n            filterByRecommended={filterByRecommended}\n            filterByBloodType={filterByBloodType}\n          />\n        </ul>\n      ) : (\n        <Rings\n          height=\"100\"\n          width=\"100\"\n          color=\"#e6533c\"\n          ariaLabel=\"rings-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100vh',\n          }}\n          wrapperClass=\"\"\n          visible={true}\n          firstLineColor=\"\"\n          middleLineColor=\"\"\n          lastLineColor=\"\"\n        />\n      )}\n      {showModal && <BasicModalWindow onCloseModal={onCloseModal} />}\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_ref","title","style","_jsx","className","children","getProducts","state","products","productList","getIsLoading","isLoading","getProductsCategories","productsCategories","getFilter","filter","getCurrentProduct","currentProduct","getFilteredProducts","filteredProducts","onOpenModal","filterByRecommended","filterByBloodType","useSelector","productsSelectors","userBloodType","selectUser","blood","onFilterProducts","length","_ref2","groupBloodNotAllowed","_ref3","_jsxs","map","_ref4","category","calories","weight","_id","type","onClick","width","height","href","sprite","categoryFilter","isFilterEmpty","setIsFilterEmpty","useState","dispatch","useDispatch","useEffect","handleSubmit","e","code","filterProducts","target","value","window","addEventListener","removeEventListener","_Fragment","currentTarget","nextElementSibling","clearFilter","searchParams","productsOperations","placeholder","onChange","onBlur","onCategoryFilterSelect","onTypeSelect","isCategoryListOpen","setCategoryIsListOpen","isTypeListOpen","setTypeListOpen","setType","categoryRender","setCategoryRender","handleKeyDown","categories","onCategorySelect","selectedCategory","dataset","onTypeSelection","handleType","selectedType","handleDropDownCategoryList","nanoid","handleDropDownType","onCloseModal","consumedCalories","handleBackdropClick","src","image","alt","Link","to","modalRoot","document","querySelector","caloriesNumber","setCaloriesNumber","isSuccess","setIsSuccess","product","productTitle","createPortal","AddProductSuccess","Formik","initialValues","Form","Field","as","props","name","label","preventDefault","data","productId","amount","addProductToDiary","ProductsPage","windowWidth","setWindowWidth","innerWidth","showModal","setShowModal","setCategoryFilter","setFilterByRecommended","setFilterByBloodType","handleResize","getUserParams","search","Object","values","join","TitlePage","FilterProducts","DropDownSelectors","Rings","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","ProductsItem","chosenProductId","closest","id","BasicModalWindow","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}