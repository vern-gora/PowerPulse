{"version":3,"file":"static/js/88.7210d6c9.chunk.js","mappings":"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","sources":["components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/ProductsItem/ProductsItem.module.css?fdd6","redux/products/selectors.js","components/ProductsItem/ProductsItem.jsx","webpack://react-homework-template/./src/components/FilterProducts/FilterProducts.module.css?371b","components/FilterProducts/FilterProducts.jsx","webpack://react-homework-template/./src/components/DropDownSelectors/DropDownSelectors.module.css?d03b","components/DropDownSelectors/DropDownSelectors.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/pages/ProductsPage/ProductsPage.module.css?2903","webpack://react-homework-template/./src/components/BasicModalWindow/BasicModalWindow.module.css?b261","components/BasicModalWindow/BasicModalWindow.jsx","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["import React from 'react';\n\nconst TitlePage = ({ title, style }) => <h2 className={style}>{title}</h2>;\n\nexport default TitlePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"ProductsItem_cardContainer__Ho9Ps\",\"cardHeadContainer\":\"ProductsItem_cardHeadContainer__mQH6j\",\"cardCategoryName\":\"ProductsItem_cardCategoryName__tWROl\",\"addProductBtn\":\"ProductsItem_addProductBtn__FlW25\",\"addBtnIcon\":\"ProductsItem_addBtnIcon__D7JeO\",\"recommendWrapper\":\"ProductsItem_recommendWrapper__atAvR\",\"labelRecommend\":\"ProductsItem_labelRecommend__ZlNgg\",\"recommendText\":\"ProductsItem_recommendText__tCLoD\",\"singleCardTitle\":\"ProductsItem_singleCardTitle__-ILEZ\",\"cardRunningIcon\":\"ProductsItem_cardRunningIcon__CZ0xb\",\"cardHeaderWrapper\":\"ProductsItem_cardHeaderWrapper__D6Zzb\",\"cardProductStats\":\"ProductsItem_cardProductStats__0Ausm\",\"cardProdStatItem\":\"ProductsItem_cardProdStatItem__CpHza\",\"cardProdStatItemText\":\"ProductsItem_cardProdStatItemText__1Sjmb\",\"warning\":\"ProductsItem_warning__JGZAz\",\"highlightedText\":\"ProductsItem_highlightedText__DiAzj\",\"notFoundText\":\"ProductsItem_notFoundText__zpC8e\",\"productItem\":\"ProductsItem_productItem__rV6k2\"};","const getProducts = state => state.info.products.productList;\nconst getIsLoading = state => state.info.products.isLoading;\nconst getProductsCategories = state => state.info.products.productsCategories;\nconst getFilter = state => state.info.products.filter;\nconst getCurrentProduct = state => state.info.products.currentProduct;\n\nconst productsSelectors = {\n  getProducts,\n  getIsLoading,\n  getProductsCategories,\n  getFilter,\n  getCurrentProduct,\n};\n\nexport default productsSelectors;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './ProductsItem.module.css';\nimport productsSelectors from 'redux/products/selectors';\n\nconst ProductsItem = ({ onOpenModal, categoryFilter }) => {\n  const products = useSelector(productsSelectors.getProducts);\n  const filter = useSelector(productsSelectors.getFilter);\n\n  const limitedProducts = products.slice(0, 20);\n  const filteredProducts = limitedProducts\n    .filter(({ title }) => title.toLowerCase().includes(filter.toLowerCase()))\n    .filter(({ category }) =>\n      category.toLowerCase().includes(categoryFilter.toLowerCase())\n    );\n\n  return filteredProducts.map(({ category, calories, title, weight, _id }) => {\n    return (\n      <li key={_id} data-id={_id} className={style.productItem}>\n        <div className={style.cardContainer}>\n          <div className={style.cardHeadContainer}>\n            <div className={style.cardCategoryName}>Diet</div>\n            <div className={style.recommendWrapper}>\n              <span className={style.labelRecommend}></span>\n              <p className={style.recommendText}>Recommended</p>\n            </div>\n            <button\n              type=\"button\"\n              className={style.addProductBtn}\n              onClick={onOpenModal}\n            >\n              Add\n              <svg className={style.addBtnIcon} width=\"16\" height=\"16\">\n                <use href={sprite + '#arrow_add_icon'}></use>\n              </svg>\n            </button>\n          </div>\n          <div className={style.cardHeaderWrapper}>\n            <svg className={style.cardRunningIcon} width=\"24\" height=\"24\">\n              <use href={sprite + '#running_stick_figure_icon'}></use>\n            </svg>\n            <h3 className={style.singleCardTitle}>{title}</h3>\n          </div>\n          <div className={style.cardProductStats}>\n            <p className={style.cardProdStatItem}>\n              <span className={style.cardProdStatItemText}>Calories:</span>{' '}\n              {calories}\n            </p>\n            <p className={style.cardProdStatItem}>\n              <span className={style.cardProdStatItemText}>Category: </span>\n              {category}\n            </p>\n            <p className={style.cardProdStatItem}>\n              <span className={style.cardProdStatItemText}>Weight:</span>{' '}\n              {weight}\n            </p>\n          </div>\n        </div>\n      </li>\n    );\n  });\n};\n\nexport default ProductsItem;\n\n// return filteredProducts.length === 0 ? (\n//   filteredProducts.map(({ category, calories, title, weight, _id }) => {\n//     return (\n//       <li key={_id} data-id={_id}>\n//         <div className={style.cardContainer}>\n//           <div className={style.cardHeadContainer}>\n//             <div className={style.cardCategoryName}>Diet</div>\n//             <div className={style.recommendWrapper}>\n//               <span className={style.labelRecommend}></span>\n//               <p className={style.recommendText}>Recommended</p>\n//             </div>\n//             <button\n//               type=\"button\"\n//               className={style.addProductBtn}\n//               onClick={onOpenModal}\n//             >\n//               Add\n//               <svg className={style.addBtnIcon} width=\"16\" height=\"16\">\n//                 <use href={sprite + '#arrow_add_icon'}></use>\n//               </svg>\n//             </button>\n//           </div>\n//           <div className={style.cardHeaderWrapper}>\n//             <svg className={style.cardRunningIcon} width=\"24\" height=\"24\">\n//               <use href={sprite + '#running_stick_figure_icon'}></use>\n//             </svg>\n//             <h3 className={style.singleCardTitle}>{title}</h3>\n//           </div>\n//           <div className={style.cardProductStats}>\n//             <p className={style.cardProdStatItem}>\n//               <span className={style.cardProdStatItemText}>Calories:</span>{' '}\n//               {calories}\n//             </p>\n//             <p className={style.cardProdStatItem}>\n//               <span className={style.cardProdStatItemText}>Category: </span>\n//               {category}\n//             </p>\n//             <p className={style.cardProdStatItem}>\n//               <span className={style.cardProdStatItemText}>Weight:</span>{' '}\n//               {weight}\n//             </p>\n//           </div>\n//         </div>\n//       </li>\n//     );\n//   })\n// ) : (\n//   <div className={style.warning}>\n//     <p className={style.notFoundText}>\n//       <span className={style.highlightedText}>\n//         Sorry, no results were found\n//       </span>{' '}\n//       for the product filters you selected. You may want to consider other\n//       search options to find the product you want. Our range is wide and you\n//       have the opportunity to find more options that suit your needs.\n//     </p>\n//     <p className={style.highlightedText}>Try changing the search parameters.</p>\n//   </div>\n// );\n","// extracted by mini-css-extract-plugin\nexport default {\"searchLabel\":\"FilterProducts_searchLabel__FkkTn\",\"searchIcon\":\"FilterProducts_searchIcon__nn4HX\",\"filterBtn\":\"FilterProducts_filterBtn__hcT2I\",\"searchField\":\"FilterProducts_searchField__1sFnJ\",\"clearSearchIcon\":\"FilterProducts_clearSearchIcon__F+9OF\",\"clearFilterBtn\":\"FilterProducts_clearFilterBtn__R6Yqk\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport style from './FilterProducts.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport productsSelectors from 'redux/products/selectors';\nimport { filterProducts, clearFilter } from 'redux/products/productsSlice';\n\nconst FilterProducts = () => {\n  const [isFilterEmpty, setIsFilterEmpty] = useState(true);\n\n  const dispatch = useDispatch();\n  const filter = useSelector(productsSelectors.getFilter);\n\n  const onFilterChange = e => {\n    setIsFilterEmpty(false);\n    dispatch(filterProducts(e.currentTarget.value));\n  };\n\n  const handleFilter = () => {\n    setIsFilterEmpty(true);\n    dispatch(clearFilter());\n  };\n\n  return (\n    <>\n      <label className={style.searchLabel}>\n        <button type=\"button\" className={style.filterBtn}>\n          <svg className={style.searchIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#search_icon'}></use>\n          </svg>\n        </button>\n        {!isFilterEmpty && (\n          <button\n            className={style.clearFilterBtn}\n            type=\"button\"\n            onClick={handleFilter}\n          >\n            <svg className={style.clearSearchIcon} width=\"18\" height=\"18\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n        )}\n        <input\n          className={style.searchField}\n          type=\"text\"\n          placeholder=\"Search\"\n          value={filter}\n          onChange={onFilterChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default FilterProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"categoryListWrapper\":\"DropDownSelectors_categoryListWrapper__ML40J\",\"dropBtnDown\":\"DropDownSelectors_dropBtnDown__59GGP\",\"dropDownIcon\":\"DropDownSelectors_dropDownIcon__5aEDt\",\"catDropList\":\"DropDownSelectors_catDropList__YaOVf\",\"categoryItem\":\"DropDownSelectors_categoryItem__7CNZq\",\"selectCatBtn\":\"DropDownSelectors_selectCatBtn__HVorH\",\"dropDownAllWrapper\":\"DropDownSelectors_dropDownAllWrapper__2UmxQ\",\"dropAllBtn\":\"DropDownSelectors_dropAllBtn__FRZLp\",\"allDropList\":\"DropDownSelectors_allDropList__mm178\"};","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport style from './DropDownSelectors.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport productsSelectors from 'redux/products/selectors';\n\nconst DropDownSelectors = ({ onCategoryFilterSelect }) => {\n  const [isCategoryListOpen, setCategoryIsListOpen] = useState(false);\n  const [isTypeListOpen, setTypeListOpen] = useState(false);\n\n  const categories = useSelector(productsSelectors.getProductsCategories);\n\n  const handleDropDownCategoryList = () => {\n    setCategoryIsListOpen(true);\n    setTypeListOpen(false);\n\n    if (isCategoryListOpen) {\n      setCategoryIsListOpen(false);\n    }\n  };\n\n  const handleDropDownType = () => {\n    setTypeListOpen(true);\n    setCategoryIsListOpen(false);\n\n    if (isTypeListOpen) {\n      setTypeListOpen(false);\n    }\n  };\n\n  const onTypeListClose = () => {\n    setTypeListOpen(false);\n  };\n\n  const onCategorySelect = e => {\n    const selectedCategory = e.currentTarget.dataset.category;\n\n    onCategoryFilterSelect(selectedCategory);\n    setCategoryIsListOpen(false);\n  };\n\n  return (\n    <>\n      <div className={style.categoryListWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropBtnDown}\n          onClick={handleDropDownCategoryList}\n        >\n          Categories\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n        {isCategoryListOpen && (\n          <ul className={style.catDropList}>\n            {categories.map(category => {\n              return (\n                <li key={nanoid(5)} className={style.categoryItem}>\n                  <button\n                    type=\"button\"\n                    className={style.selectCatBtn}\n                    onClick={onCategorySelect}\n                    data-category={category}\n                  >\n                    {category}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      {/* !!!!!!!!! */}\n      <div className={style.dropDownAllWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropAllBtn}\n          onClick={handleDropDownType}\n        >\n          All\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n\n        {isTypeListOpen && (\n          <ul className={style.allDropList}>\n            <button\n              type=\"button\"\n              className={style.selectCatBtn}\n              onClick={onTypeListClose}\n            >\n              All\n            </button>\n            <button\n              type=\"button\"\n              className={style.selectCatBtn}\n              onClick={onTypeListClose}\n            >\n              Recommended\n            </button>\n            <button\n              type=\"button\"\n              className={style.selectCatBtn}\n              onClick={onTypeListClose}\n            >\n              Not recommended\n            </button>\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DropDownSelectors;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"dropDownContainer\":\"ProductsPage_dropDownContainer__VJh-k\",\"productsTitle\":\"ProductsPage_productsTitle__IauG3\",\"dropDownAll\":\"ProductsPage_dropDownAll__HTij7\",\"prodContainer\":\"ProductsPage_prodContainer__QPuXY\",\"desktopCntrlWrap\":\"ProductsPage_desktopCntrlWrap__OtYxc\",\"cardsWrapper\":\"ProductsPage_cardsWrapper__k697g\",\"categoryListDrop\":\"ProductsPage_categoryListDrop__MoA-S\",\"filtersTitle\":\"ProductsPage_filtersTitle__MASnC\",\"filtersCtrls\":\"ProductsPage_filtersCtrls__Sl8V6\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"BasicModalWindow_overlay__s-mcD\",\"basicModalContainer\":\"BasicModalWindow_basicModalContainer__P3nRC\",\"selectedProductDescr\":\"BasicModalWindow_selectedProductDescr__+Yh-+\",\"productCardPopUp\":\"BasicModalWindow_productCardPopUp__d3+uW\",\"caloriesCount\":\"BasicModalWindow_caloriesCount__qECr1\",\"basicModalSelectedProduct\":\"BasicModalWindow_basicModalSelectedProduct__z2jpB\",\"basicModalFormInput\":\"BasicModalWindow_basicModalFormInput__bpJz9\",\"weightLabel\":\"BasicModalWindow_weightLabel__gPTUQ\",\"closeBasicModal\":\"BasicModalWindow_closeBasicModal__hSwTK\",\"closeBasicModalIcon\":\"BasicModalWindow_closeBasicModalIcon__bsEtp\",\"basicModalForm\":\"BasicModalWindow_basicModalForm__fk1Ur\",\"selectedProdBtns\":\"BasicModalWindow_selectedProdBtns__d3Fm6\",\"addDiaryBtn\":\"BasicModalWindow_addDiaryBtn__nsOIB\",\"cancelAddBtn\":\"BasicModalWindow_cancelAddBtn__eWEAQ\",\"kcalNumber\":\"BasicModalWindow_kcalNumber__dxhRY\"};","import React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './BasicModalWindow.module.css';\nimport productsSelectors from 'redux/products/selectors';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst BasicModalWindow = ({ onCloseModal }) => {\n  const [caloriesNumber, setCaloriesNumber] = useState(0);\n\n  const product = useSelector(productsSelectors.getCurrentProduct);\n  const productTitle = product.title;\n\n  const CustomInputComponent = props => (\n    <input\n      className={style.basicModalSelectedProduct}\n      type=\"text\"\n      value={productTitle}\n      {...props}\n    />\n  );\n\n  const handleChange = e => {\n    setCaloriesNumber(e.currentTarget.value);\n  };\n\n  const consumedCalories = (caloriesNumber * product.calories) / 100;\n\n  return createPortal(\n    <div className={style.overlay}>\n      <div className={style.basicModalContainer}>\n        <button\n          type=\"button\"\n          className={style.closeBasicModal}\n          onClick={onCloseModal}\n        >\n          <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n            <use href={sprite + '#close_icon'}></use>\n          </svg>\n        </button>\n        <div className={style.selectedProductDescr}>\n          <div className={style.productCardPopUp}>\n            <Formik initialValues={{ product: productTitle }}>\n              <Form className={style.basicModalForm}>\n                <Field\n                  as={CustomInputComponent}\n                  name=\"product\"\n                  value={productTitle}\n                  className={style.basicModalSelectedProduct}\n                />\n                <Field\n                  className={style.basicModalFormInput}\n                  type=\"text\"\n                  name=\"weight\"\n                  label=\"grams\"\n                  onChange={handleChange}\n                />\n              </Form>\n            </Formik>\n            <span className={style.weightLabel}>grams</span>\n          </div>\n          <p className={style.caloriesCount}>\n            Calories:\n            <span className={style.kcalNumber}>\n              {' '}\n              {consumedCalories ? consumedCalories : 0}\n            </span>\n          </p>\n          <div className={style.selectedProdBtns}>\n            <button type=\"button\" className={style.addDiaryBtn}>\n              Add to diary\n            </button>\n            <button\n              type=\"button\"\n              className={style.cancelAddBtn}\n              onClick={onCloseModal}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default BasicModalWindow;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport ProductsItem from 'components/ProductsItem/ProductsItem';\nimport FilterProducts from 'components/FilterProducts/FilterProducts';\nimport DropDownSelectors from 'components/DropDownSelectors/DropDownSelectors';\nimport { Rings } from 'react-loader-spinner';\nimport style from './ProductsPage.module.css';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport productsOperations from 'redux/products/operations';\nimport productsSelectors from 'redux/products/selectors';\n\nconst ProductsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState('');\n\n  const dispatch = useDispatch();\n  const products = useSelector(productsSelectors.getProducts);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProducts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProductsCategories());\n  }, [dispatch]);\n\n  const onOpenModal = e => {\n    const chosenProduct = e.target.closest('li');\n    const chosenProductId = chosenProduct.dataset.id;\n    dispatch(productsOperations.getProductById(chosenProductId));\n\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onCategoryFilterSelect = category => {\n    setCategoryFilter(category);\n  };\n\n  return (\n    <div className={style.prodContainer}>\n      <p className={style.filtersTitle}>Filters</p>\n      <div className={style.desktopCntrlWrap}>\n        <TitlePage style={style.productsTitle} title=\"Products\" />\n        <div className={style.filtersCtrls}>\n          <FilterProducts />\n          <div className={style.dropDownContainer}>\n            <DropDownSelectors\n              onCategoryFilterSelect={onCategoryFilterSelect}\n            />\n          </div>\n        </div>\n      </div>\n      {products.length !== 0 ? (\n        <ul className={style.cardsWrapper}>\n          <ProductsItem\n            onOpenModal={onOpenModal}\n            categoryFilter={categoryFilter}\n          />\n        </ul>\n      ) : (\n        <Rings\n          height=\"100\"\n          width=\"100\"\n          color=\"#e6533c\"\n          ariaLabel=\"rings-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100vh',\n          }}\n          wrapperClass=\"\"\n          visible={true}\n          firstLineColor=\"\"\n          middleLineColor=\"\"\n          lastLineColor=\"\"\n        />\n      )}\n\n      {showModal && <BasicModalWindow onCloseModal={onCloseModal} />}\n    </div>\n  );\n};\n\nexport default ProductsPage;\n"],"names":["_ref","title","style","_jsx","className","children","getProducts","state","info","products","productList","getIsLoading","isLoading","getProductsCategories","productsCategories","getFilter","filter","getCurrentProduct","currentProduct","onOpenModal","categoryFilter","useSelector","productsSelectors","slice","_ref2","toLowerCase","includes","_ref3","category","map","_ref4","calories","weight","_id","_jsxs","type","onClick","width","height","href","sprite","_useState","useState","_useState2","_slicedToArray","isFilterEmpty","setIsFilterEmpty","dispatch","useDispatch","_Fragment","clearFilter","placeholder","value","onChange","e","filterProducts","currentTarget","onCategoryFilterSelect","isCategoryListOpen","setCategoryIsListOpen","_useState3","_useState4","isTypeListOpen","setTypeListOpen","categories","onTypeListClose","onCategorySelect","selectedCategory","dataset","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","modalRoot","document","querySelector","onCloseModal","caloriesNumber","setCaloriesNumber","product","productTitle","consumedCalories","createPortal","Formik","initialValues","Form","Field","as","props","_objectSpread","name","label","showModal","setShowModal","setCategoryFilter","useEffect","productsOperations","TitlePage","FilterProducts","DropDownSelectors","ProductsItem","chosenProductId","target","closest","Rings","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","BasicModalWindow"],"sourceRoot":""}