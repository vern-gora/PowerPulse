{"version":3,"file":"static/js/147.e771e10c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/UserForm/RadioOption.module.css?ca87","components/UserForm/RadioOption.jsx","webpack://react-homework-template/./src/components/UserForm/UserForm.module.css?24f4","components/UserForm/UserForm.jsx","webpack://react-homework-template/./src/components/UserCard/UserCard.module.css?416f","components/UserCard/UserCard.jsx","webpack://react-homework-template/./src/pages/ProfilePage/ProfilePage.module.css?2c99","webpack://react-homework-template/./src/components/Daily/Daily.module.css?8c50","components/Daily/Daily.jsx","webpack://react-homework-template/./src/components/ExclamationMark/ExclamationMark.module.css?38b3","components/ExclamationMark/ExclamationMark.jsx","pages/ProfilePage/ProfilePage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"radio\":\"RadioOption_radio__OZsP-\",\"radio_input\":\"RadioOption_radio_input__BOryR\",\"radio_label\":\"RadioOption_radio_label__CBeMP\"};","import PropTypes from 'prop-types';\nimport css from './RadioOption.module.css';\n\nconst RadioOption = ({ id, name, value, label, onChange, checked }) => (\n  <div className={css.radio}>\n    <input\n      className={css.radio_input}\n      type=\"radio\"\n      id={id}\n      name={name}\n      value={value}\n      onChange={onChange}\n      checked={checked}\n    />\n    <label className={css.radio_label} htmlFor={id}>\n      {label}\n    </label>\n  </div>\n);\n\nRadioOption.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  // value: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default RadioOption;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"UserForm_form_container__1faXX\",\"section_title\":\"UserForm_section_title__PHNHu\",\"input\":\"UserForm_input__qGgJS\",\"input_field\":\"UserForm_input_field__zsA2L\",\"wrapper_input_field\":\"UserForm_wrapper_input_field__lNWmu\",\"wrapper_input_section\":\"UserForm_wrapper_input_section__5fGt7\",\"wrapper_input_label\":\"UserForm_wrapper_input_label__a8SMb\",\"wrapper_radio\":\"UserForm_wrapper_radio__4FX5R\",\"wrapper_radio_section\":\"UserForm_wrapper_radio_section__XhR7U\",\"wrapper_radio_section_container_left\":\"UserForm_wrapper_radio_section_container_left__bWCrP\",\"wrapper_radio_section_container_right\":\"UserForm_wrapper_radio_section_container_right__3+9Sr\",\"wrapper_radio_section_blood\":\"UserForm_wrapper_radio_section_blood__DKeTx\",\"wrapper_level\":\"UserForm_wrapper_level__l-QaO\",\"button\":\"UserForm_button__pDShj\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { selectGoToParams, selectUser } from 'redux/auth/selectors';\nimport { updateUserParams, addUserData } from 'redux/auth/operations';\nimport RadioOption from './RadioOption';\nimport css from './UserForm.module.css';\n// import { setFullinfo } from 'redux/auth/authSlice';\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const params = useSelector(selectGoToParams);\n\n\n  const bloodOptions = [\n    {\n      id: '1',\n      value: 1,\n      label: '1',\n    },\n\n    {\n      id: '2',\n      value: 2,\n      label: '2',\n    },\n    {\n      id: '3',\n      value: 3,\n      label: '3',\n    },\n    {\n      id: '4',\n      value: 4,\n      label: '4',\n    },\n  ];\n  const sexOptions = [\n    {\n      id: 'Male',\n      value: 'male',\n      label: 'Male',\n    },\n    {\n      id: 'Female',\n      value: 'female',\n      label: 'Female',\n    },\n  ];\n\n  const levelOptions = [\n    {\n      id: 'level-1',\n      value: 1,\n      label: 'Sedentary lifestyle (little or no physical activity)',\n    },\n    {\n      id: 'level-2',\n      value: 2,\n      label: 'Light activity (light exercises/sports 1-3 days per week)',\n    },\n    {\n      id: 'level-3',\n      value: 3,\n      label: 'Moderately active (moderate exercises/sports 3-5 days per week)',\n    },\n    {\n      id: 'level-4',\n      value: 4,\n      label: 'Very active (intense exercises/sports 6-7 days per week)',\n    },\n    {\n      id: 'level-5',\n      value: 5,\n      label:\n        'Extremely active (very strenuous exercises/sports and physical work)',\n    },\n  ];\n\n  const initialValues = {\n    name: user.name || 'Name',\n    height: user.height || '0',\n    currentWeight: user.currentWeight || '0',\n    desiredWeight: user.desiredWeight || '0',\n    blood: (user.blood ?? '1') || '1',\n    sex: user.sex || 'male',\n    levelActivity: (user.levelActivity ?? '1') || '1',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n    height: Yup.number()\n      .positive('Height must me positive')\n      .required('Height is requeired'),\n    currentWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Current weight is required'),\n    desiredWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Desired weight is required'),\n  });\n\n  const handleSumbit = values => {\n  const { name, height, currentWeight, desiredWeight, ...sendData } = values;\n  sendData.birthday = '1990-01-01';\n  sendData.height = height;\n  sendData.currentWeight = currentWeight;\n  sendData.desiredWeight = desiredWeight;\n\n  if(params){\n    dispatch(addUserData(sendData))\n  }else{\n    dispatch(updateUserParams(sendData))\n  };\n};\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSumbit}\n    >\n      {formik => (\n        <Form>\n          <div className={css.form_container}>\n            <div>\n              <p className={css.section_title}>Basic info</p>\n              <input\n                className={css.input}\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                defaultValue={user.name}\n                style={{ color: 'rgba(239, 237, 232, 0.60)' }}\n                readOnly\n                disabled\n              />\n            </div>\n            <div>\n              <input\n                className={css.input}\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                defaultValue={user.email}\n                style={{ color: 'rgba(239, 237, 232, 0.60)' }}\n                readOnly\n                disabled\n              />\n            </div>\n          </div>\n          <div className={css.wrapper_input_field}>\n            <div className={css.wrapper_input_section}>\n              <div className={css.wrapper_input}>\n                <p className={css.section_title}>Height</p>\n                <input\n                  className={css.input_field}\n                  type=\"number\"\n                  name=\"height\"\n                  id=\"height\"\n                  placeholder={user.height}\n                  value={formik.values.height}\n                  onChange={formik.handleChange}\n                />\n              </div>\n              <div className={css.wrapper_input}>\n                <p className={css.section_title}>Current Weight</p>\n                <input\n                  className={css.input_field}\n                  type=\"number\"\n                  name=\"currentWeight\"\n                  id=\"currentWeight\"\n                  placeholder={user.currentWeight}\n                  value={formik.values.currentWeight}\n                  onChange={formik.handleChange}\n                />\n              </div>\n            </div>\n            <div className={css.wrapper_input_section}>\n              <div className={css.wrapper_input}>\n                  <p className={css.section_title}>Desired Weight</p>\n                  <input\n                    type=\"number\"\n                    className={css.input_field}\n                    name=\"desiredWeight\"\n                    id=\"desiredWeight\"\n                    placeholder={user.desiredWeight}\n                    value={formik.values.desiredWeight}\n                    onChange={formik.handleChange}\n                  />\n                  </div>\n              <div className={css.wrapper_input}>\n                <p className={css.section_title}>0</p>\n                  <input\n                    type=\"date\"\n                    className={css.input_field}\n                    name=\"desiredWeight\"\n                    id=\"desiredWeight\"\n                    placeholder=\"0\"\n                    // value={user.desiredWeight}\n                  />\n                </div>\n            </div>\n          </div>\n          <div className={css.wrapper_radio}>\n            <div className={css.wrapper_radio_section}>\n                <div className={css.wrapper_radio_section_container_left}>\n                  <p className={css.section_title}>Blood</p>\n                  <div className={css.wrapper_radio_section_blood}>\n                    {bloodOptions.map(option => (\n                      <RadioOption\n                        style={{\n                          fontFamily: 'Roboto-400',\n                        }}\n                        key={option.id}\n                        id={option.id}\n                        name=\"blood\"\n                        checked={formik.values.blood === option.value}\n                        label={option.label}\n                        onChange={() => formik.setFieldValue('blood', option.value)}\n                      />\n                    ))}\n                  </div>\n                </div>\n                <div className={css.wrapper_radio_section_container_right}>\n                  {sexOptions.map(option => (\n                    <RadioOption\n                      key={option.id}\n                      id={option.id}\n                      name=\"sex\"\n                      checked={formik.values.sex === option.value}\n                      label={option.label}\n                      onChange={() => formik.setFieldValue('sex', option.value)}\n                    />\n                  ))}\n                </div>\n            </div>\n            <div className={css.wrapper_level}>\n              {levelOptions.map(option => (\n                <RadioOption\n                  key={option.id}\n                  id={option.id}\n                  name=\"levelActivity\"\n                  checked={formik.values.levelActivity === option.value}\n                  label={option.label}\n                  onChange={() =>formik.setFieldValue('levelActivity', option.value)}\n                />\n              ))}\n            </div>\n          </div>\n          <button className={css.button} type=\"submit\">\n            Save\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"main_wrapper\":\"UserCard_main_wrapper__0gr+Q\",\"wrap_avatar\":\"UserCard_wrap_avatar__TA5qY\",\"avatar\":\"UserCard_avatar__RIaQC\",\"avatar_svg\":\"UserCard_avatar_svg__oUr1O\",\"button\":\"UserCard_button__61Mjl\",\"icon_btn\":\"UserCard_icon_btn__SeqOG\",\"title_name\":\"UserCard_title_name__Jkmls\",\"subtitle\":\"UserCard_subtitle__CPN-+\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport sprite from '../../images/svg/sprite.svg';\nimport { updateAvatar } from 'redux/auth/operations';\nimport css from './UserCard.module.css';\nimport { nanoid } from 'nanoid';\n\nconst UserCard = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  const imageId = nanoid();\n\n  const handleAvatarChange = (event) => {\n    const formData = new FormData();\n    formData.append('avatar', event.target.files[0], imageId);\n    dispatch(updateAvatar(formData));\n  };\n  return (\n    <div className={css.main_wrapper}>\n      <div className={css.wrap_avatar}>\n        {user.avatarUrl ? \n          <img src={user.avatarUrl} alt=\"Avatar\" className={css.avatar}/>: \n          <svg className={css.avatar_svg}>\n            <use href={sprite + '#avatar_icon'}></use>\n          </svg>\n        }\n      </div>\n      <form id=\"upload-form\">\n        <input\n          type=\"file\"\n          id=\"file-input\"\n          name=\"file\"\n          style={{ display: 'none' }}\n          onChange={handleAvatarChange}\n        />\n        <label htmlFor=\"file-input\">\n          <div className={css.button}>\n            <svg className={css.icon_btn}>\n              <use href={`${sprite}#check_mark_icon`}></use>\n            </svg>\n          </div>\n        </label>\n      </form>\n      <p className={css.title_name}>{user.name ? user.name : 'User'}</p>\n      <p className={css.subtitle}>User</p>\n    </div>\n  );\n};\n\nexport default UserCard;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ProfilePage_container__HAlWm\",\"title\":\"ProfilePage_title__qrAwv\",\"wrapper\":\"ProfilePage_wrapper__avBB+\",\"wrapper_content\":\"ProfilePage_wrapper_content__nSBrY\",\"wrapper_form\":\"ProfilePage_wrapper_form__vlDSB\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Daily_container__UOJ5v\",\"wrapper\":\"Daily_wrapper__bD6VD\",\"svg\":\"Daily_svg__ltmA3\",\"text\":\"Daily_text__b8M9e\",\"value\":\"Daily_value__ck7FE\"};","// import PropTypes from 'prop-types';\n\nimport sprite from '../../images/svg/sprite.svg';\nimport css from './Daily.module.css';\n\nconst Daily = ({ color, iconId, text, value }) => {\n  return (\n    <div className={css.container} style={{ backgroundColor: `${color}` }}>\n      <div className={css.wrapper}>\n        <svg className={css.svg}>\n          <use href={`${sprite}#${iconId}`}></use>\n        </svg>\n        <p className={css.text}>{text}</p>\n      </div>\n      <p className={css.value}>{value}</p>\n    </div>\n  );\n};\n\n// Daily.propTypes = {\n//   color: PropTypes.string.isRequired,\n//   iconId: PropTypes.string.isRequired,\n//   text: PropTypes.string.isRequired,\n//   value: PropTypes.string.isRequired,\n// };\n\nexport default Daily;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrappers\":\"ExclamationMark_wrappers__nHqQe\",\"wrapper\":\"ExclamationMark_wrapper__cxsFK\",\"icon_mark\":\"ExclamationMark_icon_mark__PcIel\",\"text\":\"ExclamationMark_text__z+Dt7\"};","import sprite from '../../images/svg/sprite.svg';\nimport css from './ExclamationMark.module.css';\n\nconst ExclamationMark = () => {\n  return (\n    <div className={css.wrappers}>\n      <div className={css.wrapper}>\n        <div className={css.wrapper_mark}>\n          <svg className={css.icon_mark}>\n            <use href={`${sprite}#exclamation_mark_icon`}></use>\n          </svg>\n        </div>\n\n        <p className={css.text}>\n          We understand that each individual is unique, so the entire approach\n          to diet is relative and tailored to your unique body and goals.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ExclamationMark;\n","import { useSelector } from 'react-redux';\nimport { /*selectGoToParams,*/ selectUser } from 'redux/auth/selectors';\nimport UserForm from 'components/UserForm/UserForm';\nimport UserCard from 'components/UserCard/UserCard';\nimport css from './ProfilePage.module.css';\nimport Daily from 'components/Daily/Daily';\nimport ExclamationMark from 'components/ExclamationMark/ExclamationMark';\nimport LogoutBtn from 'components/LogoutBtn/LogoutBtn';\n\nconst ProfilePage = () => {\n  const user = useSelector(selectUser);\n  // const params = useSelector(selectGoToParams);\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.title}>Profile Settings</h2>\n      <div className={css.wrapper_content}>\n        <div>\n          <UserCard />\n          <div className={css.wrapper}>\n            <Daily\n              color=\"var(--orange-main-color)\"\n              iconId=\"fluent_food_icon\"\n              text=\"Daily calorie intake\"\n              value=\"110 min\"\n            />\n            <Daily\n              color=\"var(--orange-main-color)\"\n              iconId=\"dumbbell_icon\"\n              text=\"Daily norm of sports\"\n              value={Math.round(user.bmr) || 0}\n            />\n          </div>\n          <ExclamationMark />\n          <LogoutBtn />\n        </div>\n        <div className={css.wrapper_form}>\n          <UserForm />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_ref","id","name","value","label","onChange","checked","_jsxs","className","css","children","_jsx","type","htmlFor","UserForm","_user$blood","_user$levelActivity","dispatch","useDispatch","user","useSelector","selectUser","params","selectGoToParams","bloodOptions","sexOptions","levelOptions","initialValues","height","currentWeight","desiredWeight","blood","sex","levelActivity","validationSchema","Yup","required","positive","Formik","onSubmit","values","sendData","birthday","addUserData","updateUserParams","formik","Form","placeholder","defaultValue","style","color","readOnly","disabled","email","handleChange","map","option","RadioOption","fontFamily","setFieldValue","UserCard","imageId","nanoid","avatarUrl","src","alt","href","sprite","display","event","formData","FormData","append","target","files","updateAvatar","concat","iconId","text","backgroundColor","ExclamationMark","ProfilePage","Daily","Math","round","bmr","LogoutBtn","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}