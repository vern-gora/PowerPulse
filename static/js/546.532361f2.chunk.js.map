{"version":3,"file":"static/js/546.532361f2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/StatisticsInfo/statisticsInfo.module.css?e2de","components/StatisticsInfo/StatisticsInfo.jsx","webpack://react-homework-template/./src/pages/SignUpPage/SignUpPage.module.css?2000","webpack://react-homework-template/./src/components/SignUpForm/signUpForm.module.css?9023","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"statisticsInfo_wrapper__OQ8L4\",\"videos_wrapper\":\"statisticsInfo_videos_wrapper__qXyu0\",\"calories_wrapper\":\"statisticsInfo_calories_wrapper__MQp8r\",\"play\":\"statisticsInfo_play__TxpMN\",\"human_icon\":\"statisticsInfo_human_icon__PanqY\",\"wrap_text\":\"statisticsInfo_wrap_text__Hn2Tc\",\"num\":\"statisticsInfo_num__vCZe2\",\"num_cal\":\"statisticsInfo_num_cal__Sj6dA\",\"cal\":\"statisticsInfo_cal__UyL4I\",\"wrap_text2\":\"statisticsInfo_wrap_text2__h5CgB\"};","import css from './statisticsInfo.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\naxios.defaults.baseURL = \"https://powerpulse-backend.onrender.com\";\n\nconst StatisticInfo = () => {\n    const [calories, setCalories] = useState(null);\n    const [videos, setVideos] = useState(null);\n\n    useEffect(()=> {\n        async function getVideo() {\n            try {\n              const vid = await axios.get('/statistic/video');\n              setVideos(vid.data.videos);\n            } catch (error) {\n              console.error(error);\n            }\n        };\n        async function getCalories() {\n            try {\n              const res = await axios.get('/statistic/calories');\n              setCalories(res.data.calories);\n            } catch (error) {\n              console.error(error);\n            }\n        };\n\n        getVideo();\n        getCalories()\n    }, []);\n    \n    return (\n        <div className={css.wrapper}>  \n            <div className={css.videos_wrapper}>\n                <svg className={css.play}>\n                    <use href={sprite + '#play_icon'}></use>\n                </svg>\n                <div className={css.wrap_text}>\n                    <p className={css.num}>{videos !== null ? videos : '350+'}</p>\n                    <p>Video tutorial</p>\n                </div>\n            </div>\n            \n            <div className={css.calories_wrapper}>\n                <svg className={css.human_icon}>\n                    <use href={sprite + '#running_stick_figure_icon'}></use>\n                </svg>\n                <div className={css.wrap_text2}>\n                    <p className={css.num_cal}>{calories !== null ? calories : '500'}</p>\n                    <p className={css.cal}>cal</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default StatisticInfo;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SignUpPage_container__A1kU5\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"signUpForm_wrapper__PKhIM\",\"message\":\"signUpForm_message__fzGMT\",\"formContainer\":\"signUpForm_formContainer__DHGEk\",\"link\":\"signUpForm_link__WLLu9\",\"description\":\"signUpForm_description__H+Axh\",\"btn\":\"signUpForm_btn__JOqqb\",\"form\":\"signUpForm_form__lMLfO\",\"title\":\"signUpForm_title__QGgU7\",\"titleDescription\":\"signUpForm_titleDescription__c-H5p\",\"input\":\"signUpForm_input__rpOYh\"};","import { NavLink } from \"react-router-dom\";\nimport style from './signUpForm.module.css';\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\n\n\n\nconst SignUpForm = () => {\n    const dispatch = useDispatch();\n    \n    const SignupSchema = Yup.object().shape({\n        name: Yup.string()\n          .min(2, 'Too Short Name!')\n          .max(50, 'Too Long Name!')\n          .required('Required'),\n        email: Yup.string()\n          .min(2, 'Too Short Email!')\n          .max(50, 'Too Long Email!')\n          .email('Invalid email !!!')\n          .required('Required'),\n        password: Yup.string().required('Required'),\n      });\n\n    return(\n        <div className={style.wrapper}>\n            <div className={style.formContainer}>\n                <h1 className={style.title}>Sign Up</h1>\n                <p className={style.titleDescription}>Thank you for your interest in our platform. To complete the registration process, please provide us with the following information.</p>\n                <Formik\n                    initialValues={{\n                        name: '',\n                        email: '',\n                        password: '',\n                      }}\n                      validationSchema={SignupSchema}\n                      onSubmit={values => {\n                        dispatch(register(values));\n                      }}\n                >\n                    {({ errors, touched }) => (\n                        <Form className={style.form}>\n                            <label className={style.label}>\n                                <Field\n                                    type=\"text\"\n                                    name='name'\n                                    placeholder='Name'\n                                    required\n                                    className={style.input}\n                                />\n                                {errors.name && touched.name ? (<div className={style.message}>{errors.name}</div>) : null}\n                            </label>\n                            <label className={style.label}>\n                                <Field\n                                    type=\"email\"\n                                    name='email'\n                                    placeholder='Email'\n                                    required\n                                    className={style.input}\n                                />\n                                {errors.email && touched.email ? (<div className={style.message}>{errors.email}</div>) : null}\n                            </label>\n                            <label className={style.label}>\n                                <Field\n                                    type=\"password\"\n                                    name='password'\n                                    placeholder='Password'\n                                    minLength={7}\n                                    required\n                                    className={style.input}\n                                />\n                                {errors.password && touched.password ? (<div className={style.message}>{errors.password}</div>) : null}\n                            </label>\n                            <button type='submit' className={style.btn}>Sign Up</button>\n                        </Form>\n                    )}\n                </Formik>\n                <p className={style.description}>Already have an account?&nbsp;\n                    <NavLink to={'/signin'} className={style.link}>Sign In</NavLink>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUpForm;","import React from 'react';\nimport style from './SignUpPage.module.css';\nimport SignUpForm from 'components/SignUpForm/SignUpForm';\nimport StatisticInfo from 'components/StatisticsInfo/StatisticsInfo';\n\nconst SignUpPage = () => {\n  return (\n    <div className={style.container}>\n      <SignUpForm/>\n      <StatisticInfo/>\n    </div>\n  )\n}\nexport default SignUpPage\n"],"names":["axios","_useState","useState","_useState2","_slicedToArray","calories","setCalories","_useState3","_useState4","videos","setVideos","useEffect","_getVideo","_asyncToGenerator","_regeneratorRuntime","_callee","vid","_context","prev","next","sent","data","t0","console","error","stop","apply","arguments","_getCalories","_callee2","res","_context2","getVideo","getCalories","_jsxs","className","css","children","_jsx","href","sprite","dispatch","useDispatch","SignupSchema","Yup","shape","name","min","max","required","email","password","style","Formik","initialValues","validationSchema","onSubmit","values","register","_ref","errors","touched","Form","Field","type","placeholder","minLength","NavLink","to","SignUpForm","StatisticInfo"],"sourceRoot":""}