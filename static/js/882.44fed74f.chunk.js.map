{"version":3,"file":"static/js/882.44fed74f.chunk.js","mappings":"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","sources":["redux/auth/selectors.js","webpack://react-homework-template/./src/components/UserForm/RadioOption.module.css?ca87","components/UserForm/RadioOption.jsx","webpack://react-homework-template/./src/components/UserForm/UserForm.module.css?24f4","components/UserForm/UserForm.jsx","pages/ProfilePage/ProfilePage.jsx"],"sourcesContent":["export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectGoToParams = state => state.auth.goToParams;\n","// extracted by mini-css-extract-plugin\nexport default {\"radio\":\"RadioOption_radio__OZsP-\",\"radio_input\":\"RadioOption_radio_input__BOryR\",\"radio_label\":\"RadioOption_radio_label__CBeMP\"};","import PropTypes from 'prop-types';\nimport css from './RadioOption.module.css';\n\nconst RadioOption = ({ id, name, value, checked, label, onChange }) => (\n  <div className={css.radio}>\n    <input\n      className={css.radio_input}\n      type=\"radio\"\n      id={id}\n      name={name}\n      value={value}\n      checked={checked}\n      onChange={onChange}\n    />\n    <label className={css.radio_label} htmlFor={id}>\n      {label}\n    </label>\n  </div>\n);\n\nRadioOption.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  checked: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default RadioOption;\n","// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"UserForm_form_container__1faXX\",\"section_title\":\"UserForm_section_title__PHNHu\",\"input\":\"UserForm_input__qGgJS\",\"input_field\":\"UserForm_input_field__zsA2L\",\"wrapper_input_field\":\"UserForm_wrapper_input_field__lNWmu\",\"wrapper_input\":\"UserForm_wrapper_input__YlfRd\",\"wrapper_input_label\":\"UserForm_wrapper_input_label__a8SMb\",\"wrapper_radio\":\"UserForm_wrapper_radio__4FX5R\",\"wrapper_level\":\"UserForm_wrapper_level__l-QaO\",\"button\":\"UserForm_button__pDShj\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUserParams } from 'redux/auth/operations';\nimport RadioOption from './RadioOption';\nimport css from './UserForm.module.css';\n\nconst UserForm = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  const bloodOptions = [\n    {\n      id: '1',\n      value: '1',\n      label: '1',\n    },\n\n    {\n      id: '2',\n      value: '2',\n      label: '2',\n    },\n    {\n      id: '3',\n      value: '3',\n      label: '3',\n    },\n    {\n      id: '4',\n      value: '4',\n      label: '4',\n    },\n  ];\n  const sexOptions = [\n    {\n      id: 'Male',\n      value: 'male',\n      label: 'Male',\n    },\n    {\n      id: 'Female',\n      value: 'female',\n      label: 'Female',\n    },\n  ];\n\n  const levelOptions = [\n    {\n      id: 'level-1',\n      value: '1',\n      label: 'Sedentary lifestyle (little or no physical activity)',\n    },\n    {\n      id: 'level-2',\n      value: '2',\n      label: 'Light activity (light exercises/sports 1-3 days per week)',\n    },\n    {\n      id: 'level-3',\n      value: '3',\n      label: 'Moderately active (moderate exercises/sports 3-5 days per week)',\n    },\n    {\n      id: 'level-4',\n      value: '4',\n      label: 'Very active (intense exercises/sports 6-7 days per week)',\n    },\n    {\n      id: 'level-5',\n      value: '5',\n      label:\n        'Extremely active (very strenuous exercises/sports and physical work)',\n    },\n  ];\n\n  const initialValues = {\n    name: user.name || 'Name',\n    height: user.height || '150',\n    currentWeight: user.currentWeight || '35',\n    desiredWeight: user.desiredWeight || '35',\n    blood: (user.blood ?? '1').toString() || '1',\n    sex: user.sex || 'male',\n    levelActivity: (user.levelActivity ?? '1').toString() || '1',\n  };\n\n  const validationSchema = Yup.object({\n    name: Yup.string().required('Name is required'),\n    height: Yup.number()\n      .positive('Height must me positive')\n      .required('Height is requeired'),\n    currentWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Current weight is required'),\n    desiredWeight: Yup.number()\n      .positive('Weight must be positive')\n      .required('Desired weight is required'),\n  });\n\n  const handleSumbit = values => {\n    const sendData = { ...values };\n    dispatch(updateUserParams(sendData));\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSumbit}\n    >\n      {formik => (\n        <Form>\n          <div className={css.form_container}>\n            <div>\n              <p className={css.section_title}>Basic info</p>\n              <input\n                className={css.input}\n                name=\"name\"\n                type=\"text\"\n                placehodler=\"Your name...\"\n                defaultValue={user.name}\n                style={{ color: 'rgba(239, 237, 232, 0.60)' }}\n                readOnly\n                disabled\n              />\n            </div>\n            <div>\n              <input\n                className={css.input}\n                type=\"text\"\n                name=\"email\"\n                defaultValue={user.email}\n                style={{ color: 'rgba(239, 237, 232, 0.60)' }}\n                readOnly\n                disabled\n              />\n            </div>\n          </div>\n\n          <div className={css.wrapper_input_field}>\n            <div className={css.wrapper_input}>\n              <input\n                className={css.input_field}\n                type=\"number\"\n                name=\"height\"\n                id=\"height\"\n                placeholder=\"\"\n              />\n              <label className={css.wrapper_input_label} htmlFor=\"height\">\n                Height\n              </label>\n            </div>\n            <div className={css.wrapper}>\n              <div className={css.wrapper_input}>\n                <input\n                  className={css.input_field}\n                  type=\"number\"\n                  name=\"currentWeight\"\n                  id=\"currentWeight\"\n                  placehodler=\"\"\n                />\n                <label\n                  htmlFor=\"currentWeight\"\n                  className={css.wrapper_input_label}\n                >\n                  Current Weight\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <div className={css.wrapper_input_field}>\n            <div className={css.wrapper_input}>\n              <input\n                type=\"number\"\n                className={css.input_field}\n                name=\"desiredWeight\"\n                id=\"desiredWeight\"\n                placeholder=\"\"\n              />\n              <label\n                className={css.wrapper_input_label}\n                htmlFor=\"desiredWeight\"\n              >\n                Desired Weight\n              </label>\n            </div>\n            <>Calendar</>\n          </div>\n\n          <div className={css.wrapper_radio}>\n            <div style={{ display: 'flex', marginRight: '20px' }}>\n              <div style={{ display: 'flex', marginRight: '20px' }}>\n                {bloodOptions.map(option => (\n                  <RadioOption\n                    key={option.id}\n                    id={option.id}\n                    name=\"blood\"\n                    checked={formik.values.blood === option.value}\n                    label={option.label}\n                    onChange={() => formik.setFieldValue('blood', option.value)}\n                  />\n                ))}\n              </div>\n              <div style={{ display: 'flex' }}>\n                {sexOptions.map(option => (\n                  <RadioOption\n                    key={option.id}\n                    id={option.id}\n                    name=\"sex\"\n                    checked={formik.values.sex === option.value}\n                    label={option.label}\n                    onChange={() => formik.setFieldValue('sex', option.value)}\n                  />\n                ))}\n              </div>\n            </div>\n\n            <div сlassName={css.wrapper_level}>\n              {levelOptions.map(option => (\n                <RadioOption\n                  key={option.id}\n                  id={option.id}\n                  name=\"levelActivity\"\n                  checked={formik.values.levelActivity === option.value}\n                  label={option.label}\n                  onChange={() =>\n                    formik.setFieldValue('levelActivity', option.value)\n                  }\n                />\n              ))}\n            </div>\n          </div>\n\n          <button className={css.button} type=\"submit\">\n            Save\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserForm;\n","import React from 'react';\nimport UserForm from 'components/UserForm/UserForm';\n\nconst ProfilePage = () => {\n  return (\n    <>\n      <UserForm/>\n    </>\n  );\n};\n\nexport default ProfilePage;\n"],"names":["selectUser","state","auth","user","_ref","id","name","value","checked","label","onChange","_jsxs","className","css","children","_jsx","type","htmlFor","_user$blood","_user$levelActivity","dispatch","useDispatch","useSelector","bloodOptions","sexOptions","levelOptions","initialValues","height","currentWeight","desiredWeight","blood","toString","sex","levelActivity","validationSchema","Yup","required","positive","Formik","onSubmit","values","sendData","_objectSpread","updateUserParams","formik","Form","placehodler","defaultValue","style","color","readOnly","disabled","email","placeholder","_Fragment","display","marginRight","map","option","RadioOption","setFieldValue","сlassName","UserForm"],"sourceRoot":""}