{"version":3,"file":"static/js/169.9c1f04d6.chunk.js","mappings":"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","sources":["components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/ProductsItem/ProductsItem.module.css?fdd6","redux/products/selectors.js","components/ProductsItem/ProductsItem.jsx","webpack://react-homework-template/./src/components/FilterProducts/FilterProducts.module.css?371b","components/FilterProducts/FilterProducts.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/DropDownSelectors/DropDownSelectors.module.css?d03b","components/DropDownSelectors/DropDownSelectors.jsx","webpack://react-homework-template/./src/pages/ProductsPage/ProductsPage.module.css?2903","webpack://react-homework-template/./src/components/AddProductSuccess/AddProductSuccess.module.css?719b","components/AddProductSuccess/AddProductSuccess.jsx","webpack://react-homework-template/./src/components/BasicModalWindow/BasicModalWindow.module.css?b261","components/BasicModalWindow/BasicModalWindow.jsx","pages/ProductsPage/ProductsPage.jsx","redux/auth/selectors.js"],"sourcesContent":["import React from 'react';\n\nconst TitlePage = ({ title, style }) => <h2 className={style}>{title}</h2>;\n\nexport default TitlePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"ProductsItem_cardContainer__Ho9Ps\",\"cardHeadContainer\":\"ProductsItem_cardHeadContainer__mQH6j\",\"cardCategoryName\":\"ProductsItem_cardCategoryName__tWROl\",\"addProductBtn\":\"ProductsItem_addProductBtn__FlW25\",\"addBtnIcon\":\"ProductsItem_addBtnIcon__D7JeO\",\"recommendWrapper\":\"ProductsItem_recommendWrapper__atAvR\",\"labelRecommend\":\"ProductsItem_labelRecommend__ZlNgg\",\"labelNotRecommended\":\"ProductsItem_labelNotRecommended__wZIIp\",\"recommendText\":\"ProductsItem_recommendText__tCLoD\",\"singleCardTitle\":\"ProductsItem_singleCardTitle__-ILEZ\",\"cardRunningIcon\":\"ProductsItem_cardRunningIcon__CZ0xb\",\"cardHeaderWrapper\":\"ProductsItem_cardHeaderWrapper__D6Zzb\",\"cardProductStats\":\"ProductsItem_cardProductStats__0Ausm\",\"cardProdStatItem\":\"ProductsItem_cardProdStatItem__CpHza\",\"cardProdStatItemText\":\"ProductsItem_cardProdStatItemText__1Sjmb\",\"warning\":\"ProductsItem_warning__JGZAz\",\"highlightedText\":\"ProductsItem_highlightedText__DiAzj\",\"notFoundText\":\"ProductsItem_notFoundText__zpC8e\",\"productItem\":\"ProductsItem_productItem__rV6k2\"};","const getProducts = state => state.products.productList;\nconst getIsLoading = state => state.products.isLoading;\nconst getProductsCategories = state => state.products.productsCategories;\nconst getFilter = state => state.products.filter;\nconst getCurrentProduct = state => state.products.currentProduct;\nconst getFilteredProducts = state => state.products.filteredProducts;\n\nconst productsSelectors = {\n  getProducts,\n  getIsLoading,\n  getProductsCategories,\n  getFilter,\n  getCurrentProduct,\n  getFilteredProducts,\n};\n\nexport default productsSelectors;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './ProductsItem.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst ProductsItem = ({\n  onOpenModal,\n  categoryFilter,\n  filterByRecommended,\n  filterByBloodType,\n}) => {\n  const products = useSelector(productsSelectors.getProducts);\n  const filter = useSelector(productsSelectors.getFilter);\n\n  const currentUser = useSelector(selectUser);\n  const userBloodType = currentUser.user.blood || '1';\n\n  const filteredProducts = products\n    .filter(({ title }) => title.toLowerCase().includes(filter.toLowerCase()))\n    .filter(({ category }) =>\n      category.toLowerCase().includes(categoryFilter.toLowerCase())\n    );\n\n  const onFilterProducts = () => {\n    if (filterByBloodType && filterByRecommended) {\n      return filteredProducts.filter(\n        ({ groupBloodNotAllowed }) => groupBloodNotAllowed[userBloodType]\n      );\n    } else if (filterByBloodType && !filterByRecommended) {\n      return filteredProducts.filter(\n        ({ groupBloodNotAllowed }) => !groupBloodNotAllowed[userBloodType]\n      );\n    } else {\n      return filteredProducts;\n    }\n  };\n\n  // const onProductsRender = () => {\n  //   if (filteredProducts.length !== 0) {\n  //     return filteredProducts;\n  //   }\n\n  //   return products;\n  // };\n\n  return onFilterProducts().map(\n    ({ category, calories, title, weight, _id, groupBloodNotAllowed }) => {\n      return (\n        <li key={_id} data-id={_id} className={style.productItem}>\n          <div className={style.cardContainer}>\n            <div className={style.cardHeadContainer}>\n              <div className={style.cardCategoryName}>Diet</div>\n              <div className={style.recommendWrapper}>\n                <span\n                  className={\n                    groupBloodNotAllowed[userBloodType]\n                      ? style.labelRecommend\n                      : style.labelNotRecommended\n                  }\n                ></span>\n                <p className={style.recommendText}>Recommended</p>\n              </div>\n              <button\n                type=\"button\"\n                className={style.addProductBtn}\n                onClick={onOpenModal}\n              >\n                Add\n                <svg className={style.addBtnIcon} width=\"16\" height=\"16\">\n                  <use href={sprite + '#arrow_add_icon'}></use>\n                </svg>\n              </button>\n            </div>\n            <div className={style.cardHeaderWrapper}>\n              <svg className={style.cardRunningIcon} width=\"24\" height=\"24\">\n                <use href={sprite + '#running_stick_figure_icon'}></use>\n              </svg>\n              <h3 className={style.singleCardTitle}>{title}</h3>\n            </div>\n            <div className={style.cardProductStats}>\n              <p className={style.cardProdStatItem}>\n                <span className={style.cardProdStatItemText}>Calories:</span>{' '}\n                {calories}\n              </p>\n              <p className={style.cardProdStatItem}>\n                <span className={style.cardProdStatItemText}>Category: </span>\n                {category}\n              </p>\n              <p className={style.cardProdStatItem}>\n                <span className={style.cardProdStatItemText}>Weight:</span>{' '}\n                {weight}\n              </p>\n            </div>\n          </div>\n        </li>\n      );\n    }\n  );\n};\n\nexport default ProductsItem;\n\n// return filteredProducts.length === 0 ? (\n//   filteredProducts.map(({ category, calories, title, weight, _id }) => {\n//     return (\n//       <li key={_id} data-id={_id}>\n//         <div className={style.cardContainer}>\n//           <div className={style.cardHeadContainer}>\n//             <div className={style.cardCategoryName}>Diet</div>\n//             <div className={style.recommendWrapper}>\n//               <span className={style.labelRecommend}></span>\n//               <p className={style.recommendText}>Recommended</p>\n//             </div>\n//             <button\n//               type=\"button\"\n//               className={style.addProductBtn}\n//               onClick={onOpenModal}\n//             >\n//               Add\n//               <svg className={style.addBtnIcon} width=\"16\" height=\"16\">\n//                 <use href={sprite + '#arrow_add_icon'}></use>\n//               </svg>\n//             </button>\n//           </div>\n//           <div className={style.cardHeaderWrapper}>\n//             <svg className={style.cardRunningIcon} width=\"24\" height=\"24\">\n//               <use href={sprite + '#running_stick_figure_icon'}></use>\n//             </svg>\n//             <h3 className={style.singleCardTitle}>{title}</h3>\n//           </div>\n//           <div className={style.cardProductStats}>\n//             <p className={style.cardProdStatItem}>\n//               <span className={style.cardProdStatItemText}>Calories:</span>{' '}\n//               {calories}\n//             </p>\n//             <p className={style.cardProdStatItem}>\n//               <span className={style.cardProdStatItemText}>Category: </span>\n//               {category}\n//             </p>\n//             <p className={style.cardProdStatItem}>\n//               <span className={style.cardProdStatItemText}>Weight:</span>{' '}\n//               {weight}\n//             </p>\n//           </div>\n//         </div>\n//       </li>\n//     );\n//   })\n// ) : (\n//   <div className={style.warning}>\n//     <p className={style.notFoundText}>\n//       <span className={style.highlightedText}>\n//         Sorry, no results were found\n//       </span>{' '}\n//       for the product filters you selected. You may want to consider other\n//       search options to find the product you want. Our range is wide and you\n//       have the opportunity to find more options that suit your needs.\n//     </p>\n//     <p className={style.highlightedText}>Try changing the search parameters.</p>\n//   </div>\n// );\n","// extracted by mini-css-extract-plugin\nexport default {\"searchLabel\":\"FilterProducts_searchLabel__FkkTn\",\"searchIcon\":\"FilterProducts_searchIcon__nn4HX\",\"filterBtn\":\"FilterProducts_filterBtn__hcT2I\",\"searchField\":\"FilterProducts_searchField__1sFnJ\",\"clearSearchIcon\":\"FilterProducts_clearSearchIcon__F+9OF\",\"clearFilterBtn\":\"FilterProducts_clearFilterBtn__R6Yqk\"};","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport style from './FilterProducts.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport productsSelectors from 'redux/products/selectors';\nimport { filterProducts, clearFilter } from 'redux/products/productsSlice';\nimport productsOperations from 'redux/products/operations';\n\nconst FilterProducts = () => {\n  const [isFilterEmpty, setIsFilterEmpty] = useState(true);\n\n  const dispatch = useDispatch();\n  const filter = useSelector(productsSelectors.getFilter);\n\n  const onFilterChange = e => {\n    if (e.currentTarget.value === '') {\n      setIsFilterEmpty(true);\n      return;\n    }\n    setIsFilterEmpty(false);\n  };\n\n  const onFocusChange = e => {\n    dispatch(filterProducts(e.currentTarget.value));\n\n    const searchParam = {\n      category: `${filter}`,\n    };\n    dispatch(productsOperations.getFilteredProducts(searchParam));\n  };\n\n  const handleFilter = e => {\n    e.currentTarget.nextElementSibling.value = '';\n\n    setIsFilterEmpty(true);\n    dispatch(clearFilter());\n  };\n\n  return (\n    <>\n      <label className={style.searchLabel}>\n        <button type=\"button\" className={style.filterBtn}>\n          <svg className={style.searchIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#search_icon'}></use>\n          </svg>\n        </button>\n        {!isFilterEmpty && (\n          <button\n            className={style.clearFilterBtn}\n            type=\"button\"\n            onClick={handleFilter}\n          >\n            <svg className={style.clearSearchIcon} width=\"18\" height=\"18\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n        )}\n        <input\n          className={style.searchField}\n          type=\"text\"\n          placeholder=\"Search\"\n          // value={filter}\n          onChange={onFilterChange}\n          onBlur={onFocusChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default FilterProducts;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"categoryListWrapper\":\"DropDownSelectors_categoryListWrapper__ML40J\",\"dropBtnDown\":\"DropDownSelectors_dropBtnDown__59GGP\",\"dropDownIcon\":\"DropDownSelectors_dropDownIcon__5aEDt\",\"catDropList\":\"DropDownSelectors_catDropList__YaOVf\",\"categoryItem\":\"DropDownSelectors_categoryItem__7CNZq\",\"selectCatBtn\":\"DropDownSelectors_selectCatBtn__HVorH\",\"dropDownAllWrapper\":\"DropDownSelectors_dropDownAllWrapper__2UmxQ\",\"dropAllBtn\":\"DropDownSelectors_dropAllBtn__FRZLp\",\"allDropList\":\"DropDownSelectors_allDropList__mm178\",\"typeItem\":\"DropDownSelectors_typeItem__76rCW\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport style from './DropDownSelectors.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport productsSelectors from 'redux/products/selectors';\nimport productsOperations from 'redux/products/operations';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst DropDownSelectors = ({ onCategoryFilterSelect, onTypeSelect }) => {\n  const [isCategoryListOpen, setCategoryIsListOpen] = useState(false);\n  const [isTypeListOpen, setTypeListOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const currentUser = useSelector(selectUser);\n\n  const categories = useSelector(productsSelectors.getProductsCategories);\n\n  const handleDropDownCategoryList = () => {\n    setCategoryIsListOpen(true);\n    setTypeListOpen(false);\n\n    if (isCategoryListOpen) {\n      setCategoryIsListOpen(false);\n    }\n  };\n\n  const handleDropDownType = () => {\n    setTypeListOpen(true);\n    setCategoryIsListOpen(false);\n\n    if (isTypeListOpen) {\n      setTypeListOpen(false);\n    }\n  };\n\n  const onCategorySelect = e => {\n    const selectedCategory = e.currentTarget.dataset.category;\n\n    const searchParam = { category: `${selectedCategory}` };\n    dispatch(productsOperations.getFilteredProducts(searchParam));\n\n    onCategoryFilterSelect(selectedCategory);\n    setCategoryIsListOpen(false);\n  };\n\n  const onTypeSelection = e => {\n    const type = e.currentTarget.dataset.type;\n    onTypeSelect(type);\n\n    setTypeListOpen(false);\n\n    const userBloodType = currentUser.user.blood;\n    const searchParam = { category: `${userBloodType}` };\n    dispatch(productsOperations.getFilteredProducts(searchParam));\n  };\n\n  return (\n    <>\n      <div className={style.categoryListWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropBtnDown}\n          onClick={handleDropDownCategoryList}\n        >\n          Categories\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n        {isCategoryListOpen && (\n          <ul className={style.catDropList}>\n            <li key={nanoid(5)} className={style.categoryItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                data-category={'all'}\n                onClick={onCategorySelect}\n              >\n                All categories\n              </button>\n            </li>\n            {categories.map(category => {\n              return (\n                <li key={nanoid(5)} className={style.categoryItem}>\n                  <button\n                    type=\"button\"\n                    className={style.selectCatBtn}\n                    onClick={onCategorySelect}\n                    data-category={category}\n                  >\n                    {category}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      {/* !!!!!!!!! */}\n      <div className={style.dropDownAllWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropAllBtn}\n          onClick={handleDropDownType}\n        >\n          All\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n\n        {isTypeListOpen && (\n          <ul className={style.allDropList}>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"all\"\n              >\n                All\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"recommended\"\n              >\n                Recommended\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"not-recommended\"\n              >\n                Not recommended\n              </button>\n            </li>\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DropDownSelectors;\n","// extracted by mini-css-extract-plugin\nexport default {\"dropDownContainer\":\"ProductsPage_dropDownContainer__VJh-k\",\"productsTitle\":\"ProductsPage_productsTitle__IauG3\",\"dropDownAll\":\"ProductsPage_dropDownAll__HTij7\",\"prodContainer\":\"ProductsPage_prodContainer__QPuXY\",\"desktopCntrlWrap\":\"ProductsPage_desktopCntrlWrap__OtYxc\",\"cardsWrapper\":\"ProductsPage_cardsWrapper__k697g\",\"categoryListDrop\":\"ProductsPage_categoryListDrop__MoA-S\",\"filtersTitle\":\"ProductsPage_filtersTitle__MASnC\",\"filtersCtrls\":\"ProductsPage_filtersCtrls__Sl8V6\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"AddProductSuccess_overlay__bgeXN\",\"successWrap\":\"AddProductSuccess_successWrap__borPA\",\"closeBasicModal\":\"AddProductSuccess_closeBasicModal__YLoav\",\"closeBasicModalIcon\":\"AddProductSuccess_closeBasicModalIcon__jkeXD\",\"successData\":\"AddProductSuccess_successData__MrYia\",\"successImg\":\"AddProductSuccess_successImg__y+iQ6\",\"wellDone\":\"AddProductSuccess_wellDone__ankeW\",\"kcal\":\"AddProductSuccess_kcal__SUwX5\",\"kcalNumber\":\"AddProductSuccess_kcalNumber__QwIs1\",\"nextBtn\":\"AddProductSuccess_nextBtn__Gd9E-\",\"linkWrapper\":\"AddProductSuccess_linkWrapper__IRdIn\",\"link\":\"AddProductSuccess_link__mTD8S\",\"linkArrow\":\"AddProductSuccess_linkArrow__vAYUI\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './AddProductSuccess.module.css';\nimport image from 'images/avocado.png';\nimport sprite from '../../images/svg/sprite.svg';\n\nconst AddProductSuccess = ({ onCloseModal, consumedCalories }) => {\n  return (\n    <div className={style.overlay}>\n      <div className={style.successWrap}>\n        <button\n          type=\"button\"\n          className={style.closeBasicModal}\n          onClick={onCloseModal}\n        >\n          <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n            <use href={sprite + '#close_icon'}></use>\n          </svg>\n        </button>\n        <div className={style.successData}>\n          <img src={image} alt=\"Success\" className={style.successImg} />\n          <p className={style.wellDone}>Well done</p>\n          <p className={style.kcal}>\n            Calories:{' '}\n            <span className={style.kcalNumber}>{consumedCalories}</span>\n          </p>\n          <button\n            type=\"button\"\n            className={style.nextBtn}\n            onClick={onCloseModal}\n          >\n            Next product\n          </button>\n          <div className={style.linkWrapper}>\n            <Link to=\"/diary\" className={style.link}>\n              To the diary{' '}\n            </Link>\n            <svg width=\"16\" height=\"16\">\n              <use\n                href={sprite + '#arrow_add_icon'}\n                className={style.linkArrow}\n              ></use>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProductSuccess;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"BasicModalWindow_overlay__s-mcD\",\"basicModalContainer\":\"BasicModalWindow_basicModalContainer__P3nRC\",\"selectedProductDescr\":\"BasicModalWindow_selectedProductDescr__+Yh-+\",\"productCardPopUp\":\"BasicModalWindow_productCardPopUp__d3+uW\",\"caloriesCount\":\"BasicModalWindow_caloriesCount__qECr1\",\"basicModalSelectedProduct\":\"BasicModalWindow_basicModalSelectedProduct__z2jpB\",\"basicModalFormInput\":\"BasicModalWindow_basicModalFormInput__bpJz9\",\"weightLabel\":\"BasicModalWindow_weightLabel__gPTUQ\",\"closeBasicModal\":\"BasicModalWindow_closeBasicModal__hSwTK\",\"closeBasicModalIcon\":\"BasicModalWindow_closeBasicModalIcon__bsEtp\",\"basicModalForm\":\"BasicModalWindow_basicModalForm__fk1Ur\",\"selectedProdBtns\":\"BasicModalWindow_selectedProdBtns__d3Fm6\",\"addDiaryBtn\":\"BasicModalWindow_addDiaryBtn__nsOIB\",\"cancelAddBtn\":\"BasicModalWindow_cancelAddBtn__eWEAQ\",\"kcalNumber\":\"BasicModalWindow_kcalNumber__dxhRY\"};","import React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport AddProductSuccess from 'components/AddProductSuccess/AddProductSuccess';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './BasicModalWindow.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { addProductToDiary } from 'redux/diary/operations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst BasicModalWindow = ({ onCloseModal }) => {\n  const [caloriesNumber, setCaloriesNumber] = useState(0);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const product = useSelector(productsSelectors.getCurrentProduct);\n  const productTitle = product.title;\n\n  const CustomInputComponent = props => (\n    <input\n      className={style.basicModalSelectedProduct}\n      type=\"text\"\n      value={productTitle}\n      {...props}\n    />\n  );\n\n  const handleChange = e => {\n    setCaloriesNumber(e.currentTarget.value);\n  };\n\n  const consumedCalories = (caloriesNumber * product.calories) / 100;\n\n  const handleProductAdd = e => {\n    e.preventDefault();\n\n    const today = new Date();\n    const month = today.getMonth() + 1;\n    const year = today.getFullYear();\n    const day = today.getDate();\n    const date = `${month}/${day}/${year}`;\n\n    const data = {\n      productId: product._id,\n      date,\n      amount: caloriesNumber,\n      calories: consumedCalories,\n    };\n\n    dispatch(addProductToDiary(data));\n    // onCloseModal();\n    setIsSuccess(true);\n  };\n\n  return createPortal(\n    !isSuccess ? (\n      <div className={style.overlay}>\n        <div className={style.basicModalContainer}>\n          <button\n            type=\"button\"\n            className={style.closeBasicModal}\n            onClick={onCloseModal}\n          >\n            <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n          <div className={style.selectedProductDescr}>\n            <div className={style.productCardPopUp}>\n              <Formik initialValues={{ product: productTitle }}>\n                <Form className={style.basicModalForm}>\n                  <Field\n                    as={CustomInputComponent}\n                    name=\"product\"\n                    value={productTitle}\n                    className={style.basicModalSelectedProduct}\n                  />\n                  <Field\n                    className={style.basicModalFormInput}\n                    type=\"text\"\n                    name=\"weight\"\n                    label=\"grams\"\n                    onChange={handleChange}\n                  />\n                </Form>\n              </Formik>\n              <span className={style.weightLabel}>grams</span>\n            </div>\n            <p className={style.caloriesCount}>\n              Calories:\n              <span className={style.kcalNumber}>\n                {' '}\n                {consumedCalories ? consumedCalories : 0}\n              </span>\n            </p>\n            <div className={style.selectedProdBtns}>\n              <button\n                type=\"submit\"\n                className={style.addDiaryBtn}\n                onClick={handleProductAdd}\n              >\n                Add to diary\n              </button>\n              <button\n                type=\"button\"\n                className={style.cancelAddBtn}\n                onClick={onCloseModal}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <AddProductSuccess\n        onCloseModal={onCloseModal}\n        consumedCalories={consumedCalories}\n      />\n    ),\n    modalRoot\n  );\n};\n\nexport default BasicModalWindow;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport ProductsItem from 'components/ProductsItem/ProductsItem';\nimport FilterProducts from 'components/FilterProducts/FilterProducts';\nimport DropDownSelectors from 'components/DropDownSelectors/DropDownSelectors';\nimport { Rings } from 'react-loader-spinner';\nimport style from './ProductsPage.module.css';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport productsOperations from 'redux/products/operations';\nimport productsSelectors from 'redux/products/selectors';\nimport { refreshUser } from 'redux/auth/operations';\n\nconst ProductsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [filterByRecommended, setFilterByRecommended] = useState(false);\n  const [filterByBloodType, setFilterByBloodType] = useState(false);\n\n  const dispatch = useDispatch();\n  const products = useSelector(productsSelectors.getProducts);\n\n  useEffect(() => {\n    dispatch(refreshUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProducts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProductsCategories());\n  }, [dispatch]);\n\n  const onOpenModal = e => {\n    const chosenProduct = e.target.closest('li');\n    const chosenProductId = chosenProduct.dataset.id;\n    dispatch(productsOperations.getProductById(chosenProductId));\n\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onCategoryFilterSelect = category => {\n    if (category === 'all') {\n      setCategoryFilter('');\n      return;\n    }\n\n    setCategoryFilter(category);\n  };\n\n  const onTypeSelect = type => {\n    switch (type) {\n      // case 'all':\n      //   break;\n      case 'recommended':\n        setFilterByRecommended(true);\n        setFilterByBloodType(true);\n        break;\n      case 'not-recommended':\n        setFilterByRecommended(false);\n        setFilterByBloodType(true);\n        break;\n      default:\n        setFilterByRecommended(false);\n        setFilterByBloodType(false);\n    }\n  };\n\n  return (\n    <div className={style.prodContainer}>\n      <p className={style.filtersTitle}>Filters</p>\n      <div className={style.desktopCntrlWrap}>\n        <TitlePage style={style.productsTitle} title=\"Products\" />\n        <div className={style.filtersCtrls}>\n          <FilterProducts />\n          <div className={style.dropDownContainer}>\n            <DropDownSelectors\n              onCategoryFilterSelect={onCategoryFilterSelect}\n              onTypeSelect={onTypeSelect}\n            />\n          </div>\n        </div>\n      </div>\n      {products.length !== 0 ? (\n        <ul className={style.cardsWrapper}>\n          <ProductsItem\n            onOpenModal={onOpenModal}\n            categoryFilter={categoryFilter}\n            filterByRecommended={filterByRecommended}\n            filterByBloodType={filterByBloodType}\n          />\n        </ul>\n      ) : (\n        <Rings\n          height=\"100\"\n          width=\"100\"\n          color=\"#e6533c\"\n          ariaLabel=\"rings-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100vh',\n          }}\n          wrapperClass=\"\"\n          visible={true}\n          firstLineColor=\"\"\n          middleLineColor=\"\"\n          lastLineColor=\"\"\n        />\n      )}\n      {showModal && <BasicModalWindow onCloseModal={onCloseModal} />}\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectGoToParams = state => state.auth.goToParams;\n"],"names":["_ref","title","style","_jsx","className","children","getProducts","state","products","productList","getIsLoading","isLoading","getProductsCategories","productsCategories","getFilter","filter","getCurrentProduct","currentProduct","getFilteredProducts","filteredProducts","onOpenModal","categoryFilter","filterByRecommended","filterByBloodType","useSelector","productsSelectors","userBloodType","selectUser","user","blood","_ref2","toLowerCase","includes","_ref3","category","_ref4","groupBloodNotAllowed","_ref5","map","_ref6","calories","weight","_id","_jsxs","type","onClick","width","height","href","sprite","_useState","useState","_useState2","_slicedToArray","isFilterEmpty","setIsFilterEmpty","dispatch","useDispatch","_Fragment","e","currentTarget","nextElementSibling","value","clearFilter","placeholder","onChange","onBlur","filterProducts","searchParam","concat","productsOperations","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","onCategoryFilterSelect","onTypeSelect","isCategoryListOpen","setCategoryIsListOpen","_useState3","_useState4","isTypeListOpen","setTypeListOpen","currentUser","categories","onCategorySelect","selectedCategory","dataset","onTypeSelection","onCloseModal","consumedCalories","src","image","alt","Link","to","modalRoot","document","querySelector","caloriesNumber","setCaloriesNumber","isSuccess","setIsSuccess","product","productTitle","createPortal","AddProductSuccess","Formik","initialValues","Form","Field","as","props","_objectSpread","name","label","preventDefault","today","Date","month","getMonth","year","getFullYear","day","getDate","date","data","productId","amount","addProductToDiary","showModal","setShowModal","setCategoryFilter","_useState5","_useState6","setFilterByRecommended","_useState7","_useState8","setFilterByBloodType","useEffect","refreshUser","TitlePage","FilterProducts","DropDownSelectors","ProductsItem","chosenProductId","target","closest","Rings","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","BasicModalWindow","auth"],"sourceRoot":""}