{"version":3,"file":"static/js/667.99429636.chunk.js","mappings":"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","sources":["components/TitlePage/TitlePage.jsx","webpack://react-homework-template/./src/components/ProductsItem/ProductsItem.module.css?fdd6","redux/products/selectors.js","components/ProductsItem/ProductsItem.jsx","webpack://react-homework-template/./src/components/FilterProducts/FilterProducts.module.css?371b","components/FilterProducts/FilterProducts.jsx","webpack://react-homework-template/./src/components/DropDownSelectors/DropDownSelectors.module.css?d03b","components/DropDownSelectors/DropDownSelectors.jsx","webpack://react-homework-template/./src/pages/ProductsPage/ProductsPage.module.css?2903","webpack://react-homework-template/./src/components/AddProductSuccess/AddProductSuccess.module.css?719b","components/AddProductSuccess/AddProductSuccess.jsx","webpack://react-homework-template/./src/components/BasicModalWindow/BasicModalWindow.module.css?b261","components/BasicModalWindow/BasicModalWindow.jsx","pages/ProductsPage/ProductsPage.jsx","redux/auth/selectors.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import React from 'react';\n\nconst TitlePage = ({ title, style }) => <h2 className={style}>{title}</h2>;\n\nexport default TitlePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"cardContainer\":\"ProductsItem_cardContainer__Ho9Ps\",\"cardHeadContainer\":\"ProductsItem_cardHeadContainer__mQH6j\",\"cardCategoryName\":\"ProductsItem_cardCategoryName__tWROl\",\"addProductBtn\":\"ProductsItem_addProductBtn__FlW25\",\"addBtnIcon\":\"ProductsItem_addBtnIcon__D7JeO\",\"recommendWrapper\":\"ProductsItem_recommendWrapper__atAvR\",\"labelRecommend\":\"ProductsItem_labelRecommend__ZlNgg\",\"labelNotRecommended\":\"ProductsItem_labelNotRecommended__wZIIp\",\"recommendText\":\"ProductsItem_recommendText__tCLoD\",\"singleCardTitle\":\"ProductsItem_singleCardTitle__-ILEZ\",\"cardRunningIcon\":\"ProductsItem_cardRunningIcon__CZ0xb\",\"cardHeaderWrapper\":\"ProductsItem_cardHeaderWrapper__D6Zzb\",\"cardProductStats\":\"ProductsItem_cardProductStats__0Ausm\",\"cardProdStatItem\":\"ProductsItem_cardProdStatItem__CpHza\",\"cardProdStatItemText\":\"ProductsItem_cardProdStatItemText__1Sjmb\",\"warning\":\"ProductsItem_warning__JGZAz\",\"highlightedText\":\"ProductsItem_highlightedText__DiAzj\",\"notFoundText\":\"ProductsItem_notFoundText__zpC8e\",\"productItem\":\"ProductsItem_productItem__rV6k2\"};","const getProducts = state => state.products.productList;\nconst getIsLoading = state => state.products.isLoading;\nconst getProductsCategories = state => state.products.productsCategories;\nconst getFilter = state => state.products.filter;\nconst getCurrentProduct = state => state.products.currentProduct;\nconst getFilteredProducts = state => state.products.filteredProducts;\n\nconst productsSelectors = {\n  getProducts,\n  getIsLoading,\n  getProductsCategories,\n  getFilter,\n  getCurrentProduct,\n  getFilteredProducts,\n};\n\nexport default productsSelectors;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './ProductsItem.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst ProductsItem = ({\n  onOpenModal,\n  categoryFilter,\n  filterByRecommended,\n  filterByBloodType,\n}) => {\n  const products = useSelector(productsSelectors.getProducts);\n  const filter = useSelector(productsSelectors.getFilter);\n\n  const currentUser = useSelector(selectUser);\n  const userBloodType = currentUser.blood || '1';\n\n  const filteredProducts = products\n    .filter(({ title }) => title.toLowerCase().includes(filter.toLowerCase()))\n    .filter(({ category }) =>\n      category.toLowerCase().includes(categoryFilter.toLowerCase())\n    );\n\n  const onFilterProducts = () => {\n    if (filterByBloodType && filterByRecommended) {\n      return filteredProducts.filter(\n        ({ groupBloodNotAllowed }) => groupBloodNotAllowed[userBloodType]\n      );\n    } else if (filterByBloodType && !filterByRecommended) {\n      return filteredProducts.filter(\n        ({ groupBloodNotAllowed }) => !groupBloodNotAllowed[userBloodType]\n      );\n    } else {\n      return filteredProducts;\n    }\n  };\n\n  return onFilterProducts().length === 0 ? (\n    <div className={style.warning}>\n      <p className={style.notFoundText}>\n        <span className={style.highlightedText}>\n          Sorry, no results were found\n        </span>{' '}\n        for the product filters you selected. You may want to consider other\n        search options to find the product you want. Our range is wide and you\n        have the opportunity to find more options that suit your needs.\n      </p>\n      <p className={style.highlightedText}>\n        Try changing the search parameters.\n      </p>\n    </div>\n  ) : (\n    onFilterProducts().map(\n      ({ category, calories, title, weight, _id, groupBloodNotAllowed }) => {\n        return (\n          <li key={_id} data-id={_id} className={style.productItem}>\n            <div className={style.cardContainer}>\n              <div className={style.cardHeadContainer}>\n                <div className={style.cardCategoryName}>Diet</div>\n                <div className={style.recommendWrapper}>\n                  <span\n                    className={\n                      groupBloodNotAllowed[userBloodType]\n                        ? style.labelRecommend\n                        : style.labelNotRecommended\n                    }\n                  ></span>\n                  <p className={style.recommendText}>Recommended</p>\n                </div>\n                <button\n                  type=\"button\"\n                  className={style.addProductBtn}\n                  onClick={onOpenModal}\n                >\n                  Add\n                  <svg className={style.addBtnIcon} width=\"16\" height=\"16\">\n                    <use href={sprite + '#arrow_add_icon'}></use>\n                  </svg>\n                </button>\n              </div>\n              <div className={style.cardHeaderWrapper}>\n                <svg className={style.cardRunningIcon} width=\"24\" height=\"24\">\n                  <use href={sprite + '#running_stick_figure_icon'}></use>\n                </svg>\n                <h3 className={style.singleCardTitle}>{title}</h3>\n              </div>\n              <div className={style.cardProductStats}>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Calories:</span>{' '}\n                  {calories}\n                </p>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Category: </span>\n                  {category}\n                </p>\n                <p className={style.cardProdStatItem}>\n                  <span className={style.cardProdStatItemText}>Weight:</span>{' '}\n                  {weight}\n                </p>\n              </div>\n            </div>\n          </li>\n        );\n      }\n    )\n  );\n};\n\nexport default ProductsItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchLabel\":\"FilterProducts_searchLabel__FkkTn\",\"searchIcon\":\"FilterProducts_searchIcon__nn4HX\",\"filterBtn\":\"FilterProducts_filterBtn__hcT2I\",\"searchField\":\"FilterProducts_searchField__1sFnJ\",\"clearSearchIcon\":\"FilterProducts_clearSearchIcon__F+9OF\",\"clearFilterBtn\":\"FilterProducts_clearFilterBtn__R6Yqk\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport style from './FilterProducts.module.css';\nimport sprite from '../../images/svg/sprite.svg';\n// import productsSelectors from 'redux/products/selectors';\nimport { filterProducts, clearFilter } from 'redux/products/productsSlice';\n// import productsOperations from 'redux/products/operations';\n\nconst FilterProducts = () => {\n  const [isFilterEmpty, setIsFilterEmpty] = useState(true);\n\n  const dispatch = useDispatch();\n  // const filter = useSelector(productsSelectors.getFilter);\n\n  const onFilterChange = e => {\n    if (e.currentTarget.value === '') {\n      setIsFilterEmpty(true);\n      return;\n    }\n    setIsFilterEmpty(false);\n  };\n\n  const onFocusChange = e => {\n    dispatch(filterProducts(e.currentTarget.value));\n\n    // const searchParam = {\n    //   category: `${filter}`,\n    // };\n    // dispatch(productsOperations.getFilteredProducts(searchParam));\n  };\n\n  const handleFilter = e => {\n    e.currentTarget.nextElementSibling.value = '';\n\n    setIsFilterEmpty(true);\n    dispatch(clearFilter());\n  };\n\n  return (\n    <>\n      <label className={style.searchLabel}>\n        <button type=\"button\" className={style.filterBtn}>\n          <svg className={style.searchIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#search_icon'}></use>\n          </svg>\n        </button>\n        {!isFilterEmpty && (\n          <button\n            className={style.clearFilterBtn}\n            type=\"button\"\n            onClick={handleFilter}\n          >\n            <svg className={style.clearSearchIcon} width=\"18\" height=\"18\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n        )}\n        <input\n          className={style.searchField}\n          type=\"text\"\n          placeholder=\"Search\"\n          // value={filter}\n          onChange={onFilterChange}\n          onBlur={onFocusChange}\n        />\n      </label>\n    </>\n  );\n};\n\nexport default FilterProducts;\n","// extracted by mini-css-extract-plugin\nexport default {\"categoryListWrapper\":\"DropDownSelectors_categoryListWrapper__ML40J\",\"dropBtnDown\":\"DropDownSelectors_dropBtnDown__59GGP\",\"dropDownIcon\":\"DropDownSelectors_dropDownIcon__5aEDt\",\"catDropList\":\"DropDownSelectors_catDropList__YaOVf\",\"categoryItem\":\"DropDownSelectors_categoryItem__7CNZq\",\"selectCatBtn\":\"DropDownSelectors_selectCatBtn__HVorH\",\"dropDownAllWrapper\":\"DropDownSelectors_dropDownAllWrapper__2UmxQ\",\"dropAllBtn\":\"DropDownSelectors_dropAllBtn__FRZLp\",\"allDropList\":\"DropDownSelectors_allDropList__mm178\",\"typeItem\":\"DropDownSelectors_typeItem__76rCW\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport style from './DropDownSelectors.module.css';\nimport sprite from '../../images/svg/sprite.svg';\nimport productsSelectors from 'redux/products/selectors';\nimport productsOperations from 'redux/products/operations';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst DropDownSelectors = ({ onCategoryFilterSelect, onTypeSelect }) => {\n  const [isCategoryListOpen, setCategoryIsListOpen] = useState(false);\n  const [isTypeListOpen, setTypeListOpen] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const currentUser = useSelector(selectUser);\n\n  const categories = useSelector(productsSelectors.getProductsCategories);\n\n  const handleDropDownCategoryList = () => {\n    setCategoryIsListOpen(true);\n    setTypeListOpen(false);\n\n    if (isCategoryListOpen) {\n      setCategoryIsListOpen(false);\n    }\n  };\n\n  const handleDropDownType = () => {\n    setTypeListOpen(true);\n    setCategoryIsListOpen(false);\n\n    if (isTypeListOpen) {\n      setTypeListOpen(false);\n    }\n  };\n\n  const onCategorySelect = e => {\n    const selectedCategory = e.currentTarget.dataset.category;\n\n    // const searchParam = { category: `${selectedCategory}` };\n    // dispatch(productsOperations.getFilteredProducts(searchParam));\n\n    onCategoryFilterSelect(selectedCategory);\n    setCategoryIsListOpen(false);\n  };\n\n  const onTypeSelection = e => {\n    const type = e.currentTarget.dataset.type;\n    onTypeSelect(type);\n\n    setTypeListOpen(false);\n\n    const userBloodType = currentUser.blood;\n    const searchParam = { category: `${userBloodType}` };\n    dispatch(productsOperations.getFilteredProducts(searchParam));\n  };\n\n  return (\n    <>\n      <div className={style.categoryListWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropBtnDown}\n          onClick={handleDropDownCategoryList}\n        >\n          Categories\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n        {isCategoryListOpen && (\n          <ul className={style.catDropList}>\n            <li key={nanoid(5)} className={style.categoryItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                data-category={'all'}\n                onClick={onCategorySelect}\n              >\n                All categories\n              </button>\n            </li>\n            {categories.map(category => {\n              return (\n                <li key={nanoid(5)} className={style.categoryItem}>\n                  <button\n                    type=\"button\"\n                    className={style.selectCatBtn}\n                    onClick={onCategorySelect}\n                    data-category={category}\n                  >\n                    {category}\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n      {/* !!!!!!!!! */}\n      <div className={style.dropDownAllWrapper}>\n        <button\n          type=\"button\"\n          className={style.dropAllBtn}\n          onClick={handleDropDownType}\n        >\n          All\n          <svg className={style.dropDownIcon} width=\"18\" height=\"18\">\n            <use href={sprite + '#icon-chevron-down'}></use>\n          </svg>\n        </button>\n\n        {isTypeListOpen && (\n          <ul className={style.allDropList}>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"all\"\n              >\n                All\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"recommended\"\n              >\n                Recommended\n              </button>\n            </li>\n            <li key={nanoid(5)} className={style.typeItem}>\n              <button\n                type=\"button\"\n                className={style.selectCatBtn}\n                onClick={onTypeSelection}\n                data-type=\"not-recommended\"\n              >\n                Not recommended\n              </button>\n            </li>\n          </ul>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default DropDownSelectors;\n","// extracted by mini-css-extract-plugin\nexport default {\"dropDownContainer\":\"ProductsPage_dropDownContainer__VJh-k\",\"productsTitle\":\"ProductsPage_productsTitle__IauG3\",\"dropDownAll\":\"ProductsPage_dropDownAll__HTij7\",\"prodContainer\":\"ProductsPage_prodContainer__QPuXY\",\"desktopCntrlWrap\":\"ProductsPage_desktopCntrlWrap__OtYxc\",\"cardsWrapper\":\"ProductsPage_cardsWrapper__k697g\",\"categoryListDrop\":\"ProductsPage_categoryListDrop__MoA-S\",\"filtersTitle\":\"ProductsPage_filtersTitle__MASnC\",\"filtersCtrls\":\"ProductsPage_filtersCtrls__Sl8V6\"};","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"AddProductSuccess_overlay__bgeXN\",\"successWrap\":\"AddProductSuccess_successWrap__borPA\",\"closeBasicModal\":\"AddProductSuccess_closeBasicModal__YLoav\",\"closeBasicModalIcon\":\"AddProductSuccess_closeBasicModalIcon__jkeXD\",\"successData\":\"AddProductSuccess_successData__MrYia\",\"successImg\":\"AddProductSuccess_successImg__y+iQ6\",\"wellDone\":\"AddProductSuccess_wellDone__ankeW\",\"kcal\":\"AddProductSuccess_kcal__SUwX5\",\"kcalNumber\":\"AddProductSuccess_kcalNumber__QwIs1\",\"nextBtn\":\"AddProductSuccess_nextBtn__Gd9E-\",\"linkWrapper\":\"AddProductSuccess_linkWrapper__IRdIn\",\"link\":\"AddProductSuccess_link__mTD8S\",\"linkArrow\":\"AddProductSuccess_linkArrow__vAYUI\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './AddProductSuccess.module.css';\nimport image from 'images/avocado.png';\nimport sprite from '../../images/svg/sprite.svg';\n\nconst AddProductSuccess = ({ onCloseModal, consumedCalories }) => {\n  return (\n    <div className={style.overlay}>\n      <div className={style.successWrap}>\n        <button\n          type=\"button\"\n          className={style.closeBasicModal}\n          onClick={onCloseModal}\n        >\n          <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n            <use href={sprite + '#close_icon'}></use>\n          </svg>\n        </button>\n        <div className={style.successData}>\n          <img src={image} alt=\"Success\" className={style.successImg} />\n          <p className={style.wellDone}>Well done</p>\n          <p className={style.kcal}>\n            Calories:{' '}\n            <span className={style.kcalNumber}>{consumedCalories}</span>\n          </p>\n          <button\n            type=\"button\"\n            className={style.nextBtn}\n            onClick={onCloseModal}\n          >\n            Next product\n          </button>\n          <div className={style.linkWrapper}>\n            <Link to=\"/diary\" className={style.link}>\n              To the diary{' '}\n            </Link>\n            <svg width=\"16\" height=\"16\">\n              <use\n                href={sprite + '#arrow_add_icon'}\n                className={style.linkArrow}\n              ></use>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddProductSuccess;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"BasicModalWindow_overlay__s-mcD\",\"basicModalContainer\":\"BasicModalWindow_basicModalContainer__P3nRC\",\"selectedProductDescr\":\"BasicModalWindow_selectedProductDescr__+Yh-+\",\"productCardPopUp\":\"BasicModalWindow_productCardPopUp__d3+uW\",\"caloriesCount\":\"BasicModalWindow_caloriesCount__qECr1\",\"basicModalSelectedProduct\":\"BasicModalWindow_basicModalSelectedProduct__z2jpB\",\"basicModalFormInput\":\"BasicModalWindow_basicModalFormInput__bpJz9\",\"weightLabel\":\"BasicModalWindow_weightLabel__gPTUQ\",\"closeBasicModal\":\"BasicModalWindow_closeBasicModal__hSwTK\",\"closeBasicModalIcon\":\"BasicModalWindow_closeBasicModalIcon__bsEtp\",\"basicModalForm\":\"BasicModalWindow_basicModalForm__fk1Ur\",\"selectedProdBtns\":\"BasicModalWindow_selectedProdBtns__d3Fm6\",\"addDiaryBtn\":\"BasicModalWindow_addDiaryBtn__nsOIB\",\"cancelAddBtn\":\"BasicModalWindow_cancelAddBtn__eWEAQ\",\"kcalNumber\":\"BasicModalWindow_kcalNumber__dxhRY\"};","import React, { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport AddProductSuccess from 'components/AddProductSuccess/AddProductSuccess';\nimport sprite from '../../images/svg/sprite.svg';\nimport style from './BasicModalWindow.module.css';\nimport productsSelectors from 'redux/products/selectors';\nimport { addProductToDiary } from 'redux/diary/operations';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst BasicModalWindow = ({ onCloseModal }) => {\n  const [caloriesNumber, setCaloriesNumber] = useState(0);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const product = useSelector(productsSelectors.getCurrentProduct);\n  const productTitle = product.title;\n\n  const CustomInputComponent = props => (\n    <input\n      className={style.basicModalSelectedProduct}\n      type=\"text\"\n      value={productTitle}\n      {...props}\n    />\n  );\n\n  const handleChange = e => {\n    setCaloriesNumber(e.currentTarget.value);\n  };\n\n  const consumedCalories = (caloriesNumber * product.calories) / 100;\n\n  const handleProductAdd = e => {\n    e.preventDefault();\n\n    const data = {\n      productId: product._id,\n      amount: caloriesNumber,\n      calories: consumedCalories,\n    };\n\n    dispatch(addProductToDiary(data));\n\n    setIsSuccess(true);\n  };\n\n  return createPortal(\n    !isSuccess ? (\n      <div className={style.overlay}>\n        <div className={style.basicModalContainer}>\n          <button\n            type=\"button\"\n            className={style.closeBasicModal}\n            onClick={onCloseModal}\n          >\n            <svg className={style.closeBasicModalIcon} width=\"22\" height=\"22\">\n              <use href={sprite + '#close_icon'}></use>\n            </svg>\n          </button>\n          <div className={style.selectedProductDescr}>\n            <div className={style.productCardPopUp}>\n              <Formik initialValues={{ product: productTitle }}>\n                <Form className={style.basicModalForm}>\n                  <Field\n                    as={CustomInputComponent}\n                    name=\"product\"\n                    value={productTitle}\n                    className={style.basicModalSelectedProduct}\n                  />\n                  <Field\n                    className={style.basicModalFormInput}\n                    type=\"text\"\n                    name=\"weight\"\n                    label=\"grams\"\n                    onChange={handleChange}\n                  />\n                </Form>\n              </Formik>\n              <span className={style.weightLabel}>grams</span>\n            </div>\n            <p className={style.caloriesCount}>\n              Calories:\n              <span className={style.kcalNumber}>\n                {' '}\n                {consumedCalories ? consumedCalories : 0}\n              </span>\n            </p>\n            <div className={style.selectedProdBtns}>\n              <button\n                type=\"submit\"\n                className={style.addDiaryBtn}\n                onClick={handleProductAdd}\n              >\n                Add to diary\n              </button>\n              <button\n                type=\"button\"\n                className={style.cancelAddBtn}\n                onClick={onCloseModal}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <AddProductSuccess\n        onCloseModal={onCloseModal}\n        consumedCalories={consumedCalories}\n      />\n    ),\n    modalRoot\n  );\n};\n\nexport default BasicModalWindow;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport TitlePage from 'components/TitlePage/TitlePage';\nimport ProductsItem from 'components/ProductsItem/ProductsItem';\nimport FilterProducts from 'components/FilterProducts/FilterProducts';\nimport DropDownSelectors from 'components/DropDownSelectors/DropDownSelectors';\nimport { Rings } from 'react-loader-spinner';\nimport style from './ProductsPage.module.css';\nimport BasicModalWindow from 'components/BasicModalWindow/BasicModalWindow';\nimport productsOperations from 'redux/products/operations';\nimport productsSelectors from 'redux/products/selectors';\nimport { getUserParams } from 'redux/auth/operations';\n\nconst ProductsPage = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState('');\n  const [filterByRecommended, setFilterByRecommended] = useState(false);\n  const [filterByBloodType, setFilterByBloodType] = useState(false);\n\n  const dispatch = useDispatch();\n  const products = useSelector(productsSelectors.getProducts);\n\n  useEffect(() => {\n    dispatch(getUserParams());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProducts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(productsOperations.fetchProductsCategories());\n  }, [dispatch]);\n\n  const onOpenModal = e => {\n    const chosenProduct = e.target.closest('li');\n    const chosenProductId = chosenProduct.dataset.id;\n    dispatch(productsOperations.getProductById(chosenProductId));\n\n    setShowModal(true);\n  };\n\n  const onCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const onCategoryFilterSelect = category => {\n    if (category === 'all') {\n      setCategoryFilter('');\n      return;\n    }\n\n    setCategoryFilter(category);\n  };\n\n  const onTypeSelect = type => {\n    switch (type) {\n      // case 'all':\n      //   break;\n      case 'recommended':\n        setFilterByRecommended(true);\n        setFilterByBloodType(true);\n        break;\n      case 'not-recommended':\n        setFilterByRecommended(false);\n        setFilterByBloodType(true);\n        break;\n      default:\n        setFilterByRecommended(false);\n        setFilterByBloodType(false);\n    }\n  };\n\n  return (\n    <div className={style.prodContainer}>\n      <p className={style.filtersTitle}>Filters</p>\n      <div className={style.desktopCntrlWrap}>\n        <TitlePage style={style.productsTitle} title=\"Products\" />\n        <div className={style.filtersCtrls}>\n          <FilterProducts />\n          <div className={style.dropDownContainer}>\n            <DropDownSelectors\n              onCategoryFilterSelect={onCategoryFilterSelect}\n              onTypeSelect={onTypeSelect}\n            />\n          </div>\n        </div>\n      </div>\n      {products.length !== 0 ? (\n        <ul className={style.cardsWrapper}>\n          <ProductsItem\n            onOpenModal={onOpenModal}\n            categoryFilter={categoryFilter}\n            filterByRecommended={filterByRecommended}\n            filterByBloodType={filterByBloodType}\n          />\n        </ul>\n      ) : (\n        <Rings\n          height=\"100\"\n          width=\"100\"\n          color=\"#e6533c\"\n          ariaLabel=\"rings-loading\"\n          wrapperStyle={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100vh',\n          }}\n          wrapperClass=\"\"\n          visible={true}\n          firstLineColor=\"\"\n          middleLineColor=\"\"\n          lastLineColor=\"\"\n        />\n      )}\n      {showModal && <BasicModalWindow onCloseModal={onCloseModal} />}\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","export const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectIsRefreshing = state => state.auth.isRefreshing;\n\nexport const selectGoToParams = state => state.auth.goToParams;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_ref","title","style","_jsx","className","children","getProducts","state","products","productList","getIsLoading","isLoading","getProductsCategories","productsCategories","getFilter","filter","getCurrentProduct","currentProduct","getFilteredProducts","filteredProducts","onOpenModal","categoryFilter","filterByRecommended","filterByBloodType","useSelector","productsSelectors","userBloodType","selectUser","blood","_ref2","toLowerCase","includes","_ref3","category","onFilterProducts","_ref4","groupBloodNotAllowed","_ref5","length","_jsxs","map","_ref6","calories","weight","_id","type","onClick","width","height","href","sprite","_useState","useState","_useState2","_slicedToArray","isFilterEmpty","setIsFilterEmpty","dispatch","useDispatch","_Fragment","e","currentTarget","nextElementSibling","value","clearFilter","placeholder","onChange","onBlur","filterProducts","onCategoryFilterSelect","onTypeSelect","isCategoryListOpen","setCategoryIsListOpen","_useState3","_useState4","isTypeListOpen","setTypeListOpen","currentUser","categories","onCategorySelect","selectedCategory","dataset","onTypeSelection","searchParam","concat","productsOperations","nanoid","onCloseModal","consumedCalories","src","image","alt","Link","to","modalRoot","document","querySelector","caloriesNumber","setCaloriesNumber","isSuccess","setIsSuccess","product","productTitle","createPortal","AddProductSuccess","Formik","initialValues","Form","Field","as","props","_objectSpread","name","label","preventDefault","data","productId","amount","addProductToDiary","showModal","setShowModal","setCategoryFilter","_useState5","_useState6","setFilterByRecommended","_useState7","_useState8","setFilterByBloodType","useEffect","getUserParams","TitlePage","FilterProducts","DropDownSelectors","ProductsItem","chosenProductId","target","closest","id","Rings","color","ariaLabel","wrapperStyle","display","justifyContent","alignItems","wrapperClass","visible","firstLineColor","middleLineColor","lastLineColor","BasicModalWindow","auth","user","selectGoToParams","goToParams","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}